{"ast":null,"code":"// ========================================================================\n// REDA EMC Testing Tool - Mode Selector Component\n// ========================================================================\n// Turner Engineering Corporation - Professional EMC Testing Support\n// \n// Mode selection tabs for switching between CSV, Image, and Correction modes\n// ========================================================================\nimport React from'react';import{useAppContext}from'../../context/AppContext';import'./ModeSelector.css';// ========================================================================\n// MODE CONFIGURATION\n// ========================================================================\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MODE_CONFIGS=[{mode:'csv',icon:'ðŸ“Š',text:'CSV Data Files',subtitle:'Spectrum Analysis',description:'Analyze and compare EMC spectrum data from CSV files'},{mode:'images',icon:'ðŸ“·',text:'Image Files',subtitle:'Visual Documentation',description:'Annotate and export EMC test images'},{mode:'correction',icon:'âš¡',text:'EMI Correction',subtitle:'Data Correction',description:'Apply PCEP corrections to measurement data'}];// ========================================================================\n// MODE SELECTOR COMPONENT\n// ========================================================================\nexport const ModeSelector=()=>{const{state,setMode}=useAppContext();const currentMode=state.currentMode;const handleModeChange=mode=>{setMode(mode);};return/*#__PURE__*/_jsx(\"div\",{className:\"mode-selector\",children:/*#__PURE__*/_jsx(\"div\",{className:\"mode-tabs\",children:MODE_CONFIGS.map(config=>/*#__PURE__*/_jsxs(\"button\",{className:\"mode-tab \".concat(config.mode,\"-mode \").concat(currentMode===config.mode?'active':''),onClick:()=>handleModeChange(config.mode),title:config.description,\"data-mode\":config.mode,children:[/*#__PURE__*/_jsx(\"span\",{className:\"mode-icon\",children:config.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"mode-text\",children:config.text}),/*#__PURE__*/_jsx(\"span\",{className:\"mode-subtitle\",children:config.subtitle})]},config.mode))})});};export default ModeSelector;","map":{"version":3,"names":["React","useAppContext","jsx","_jsx","jsxs","_jsxs","MODE_CONFIGS","mode","icon","text","subtitle","description","ModeSelector","state","setMode","currentMode","handleModeChange","className","children","map","config","concat","onClick","title"],"sources":["/Users/howardwang/Desktop/Turner Engineering/Software Product Design/reda-main/typescript-react-app/src/components/ModeSelector/ModeSelector.tsx"],"sourcesContent":["// ========================================================================\n// REDA EMC Testing Tool - Mode Selector Component\n// ========================================================================\n// Turner Engineering Corporation - Professional EMC Testing Support\n// \n// Mode selection tabs for switching between CSV, Image, and Correction modes\n// ========================================================================\n\nimport React from 'react';\nimport { useAppContext } from '../../context/AppContext';\nimport { ApplicationMode } from '../../types';\nimport './ModeSelector.css';\n\n// ========================================================================\n// MODE CONFIGURATION\n// ========================================================================\n\ninterface ModeConfig {\n  mode: ApplicationMode;\n  icon: string;\n  text: string;\n  subtitle: string;\n  description: string;\n}\n\nconst MODE_CONFIGS: ModeConfig[] = [\n  {\n    mode: 'csv',\n    icon: 'ðŸ“Š',\n    text: 'CSV Data Files',\n    subtitle: 'Spectrum Analysis',\n    description: 'Analyze and compare EMC spectrum data from CSV files'\n  },\n  {\n    mode: 'images',\n    icon: 'ðŸ“·',\n    text: 'Image Files',\n    subtitle: 'Visual Documentation',\n    description: 'Annotate and export EMC test images'\n  },\n  {\n    mode: 'correction',\n    icon: 'âš¡',\n    text: 'EMI Correction',\n    subtitle: 'Data Correction',\n    description: 'Apply PCEP corrections to measurement data'\n  }\n];\n\n// ========================================================================\n// MODE SELECTOR COMPONENT\n// ========================================================================\n\nexport const ModeSelector: React.FC = () => {\n  const { state, setMode } = useAppContext();\n  const currentMode = state.currentMode;\n\n  const handleModeChange = (mode: ApplicationMode) => {\n    setMode(mode);\n  };\n\n  return (\n    <div className=\"mode-selector\">\n      <div className=\"mode-tabs\">\n        {MODE_CONFIGS.map((config) => (\n          <button\n            key={config.mode}\n            className={`mode-tab ${config.mode}-mode ${currentMode === config.mode ? 'active' : ''}`}\n            onClick={() => handleModeChange(config.mode)}\n            title={config.description}\n            data-mode={config.mode}\n          >\n            <span className=\"mode-icon\">{config.icon}</span>\n            <span className=\"mode-text\">{config.text}</span>\n            <span className=\"mode-subtitle\">{config.subtitle}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ModeSelector; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,KAAQ,0BAA0B,CAExD,MAAO,oBAAoB,CAE3B;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAUA,KAAM,CAAAC,YAA0B,CAAG,CACjC,CACEC,IAAI,CAAE,KAAK,CACXC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,gBAAgB,CACtBC,QAAQ,CAAE,mBAAmB,CAC7BC,WAAW,CAAE,sDACf,CAAC,CACD,CACEJ,IAAI,CAAE,QAAQ,CACdC,IAAI,CAAE,IAAI,CACVC,IAAI,CAAE,aAAa,CACnBC,QAAQ,CAAE,sBAAsB,CAChCC,WAAW,CAAE,qCACf,CAAC,CACD,CACEJ,IAAI,CAAE,YAAY,CAClBC,IAAI,CAAE,GAAG,CACTC,IAAI,CAAE,gBAAgB,CACtBC,QAAQ,CAAE,iBAAiB,CAC3BC,WAAW,CAAE,4CACf,CAAC,CACF,CAED;AACA;AACA;AAEA,MAAO,MAAM,CAAAC,YAAsB,CAAGA,CAAA,GAAM,CAC1C,KAAM,CAAEC,KAAK,CAAEC,OAAQ,CAAC,CAAGb,aAAa,CAAC,CAAC,CAC1C,KAAM,CAAAc,WAAW,CAAGF,KAAK,CAACE,WAAW,CAErC,KAAM,CAAAC,gBAAgB,CAAIT,IAAqB,EAAK,CAClDO,OAAO,CAACP,IAAI,CAAC,CACf,CAAC,CAED,mBACEJ,IAAA,QAAKc,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5Bf,IAAA,QAAKc,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBZ,YAAY,CAACa,GAAG,CAAEC,MAAM,eACvBf,KAAA,WAEEY,SAAS,aAAAI,MAAA,CAAcD,MAAM,CAACb,IAAI,WAAAc,MAAA,CAASN,WAAW,GAAKK,MAAM,CAACb,IAAI,CAAG,QAAQ,CAAG,EAAE,CAAG,CACzFe,OAAO,CAAEA,CAAA,GAAMN,gBAAgB,CAACI,MAAM,CAACb,IAAI,CAAE,CAC7CgB,KAAK,CAAEH,MAAM,CAACT,WAAY,CAC1B,YAAWS,MAAM,CAACb,IAAK,CAAAW,QAAA,eAEvBf,IAAA,SAAMc,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEE,MAAM,CAACZ,IAAI,CAAO,CAAC,cAChDL,IAAA,SAAMc,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAEE,MAAM,CAACX,IAAI,CAAO,CAAC,cAChDN,IAAA,SAAMc,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEE,MAAM,CAACV,QAAQ,CAAO,CAAC,GARnDU,MAAM,CAACb,IASN,CACT,CAAC,CACC,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}