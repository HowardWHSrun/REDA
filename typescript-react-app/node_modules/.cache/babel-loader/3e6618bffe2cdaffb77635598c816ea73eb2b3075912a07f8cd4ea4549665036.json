{"ast":null,"code":"import _objectSpread from\"/Users/howardwang/Desktop/Turner Engineering/Software Product Design/reda-main/typescript-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// ========================================================================\n// REDA EMC Testing Tool - CSV Visualization Component (Enhanced)\n// ========================================================================\n// Turner Engineering Corporation - Professional EMC Testing Support\n// \n// Professional Chart.js visualization with matplotlib-quality styling\n// ========================================================================\nimport React,{useRef,useState,useCallback,useMemo}from'react';import{Chart as ChartJS,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{Line}from'react-chartjs-2';import zoomPlugin from'chartjs-plugin-zoom';import{useCsvOverlayState}from'../../context/AppContext';import{CsvService}from'../../services/CsvService';import{BAND_DEFINITIONS}from'../../constants';import'./CsvVisualization.css';// Register Chart.js components\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(LinearScale,PointElement,LineElement,Title,Tooltip,Legend,zoomPlugin);// ========================================================================\n// COMPONENT INTERFACES\n// ========================================================================\n// ========================================================================\n// PROFESSIONAL CHART STYLING (MATPLOTLIB-INSPIRED)\n// ========================================================================\nconst CHART_COLORS={primary:'#1f77b4',// Matplotlib default blue\norange:'#ff7f0e',// Matplotlib orange\ngreen:'#2ca02c',// Matplotlib green\nred:'#d62728',// Matplotlib red\npurple:'#9467bd',// Matplotlib purple\nbrown:'#8c564b',// Matplotlib brown\npink:'#e377c2',// Matplotlib pink\ngray:'#7f7f7f',// Matplotlib gray\nolive:'#bcbd22',// Matplotlib olive\ncyan:'#17becf'// Matplotlib cyan\n};const PROFESSIONAL_COLORS=[CHART_COLORS.primary,CHART_COLORS.orange,CHART_COLORS.green,CHART_COLORS.red,CHART_COLORS.purple,CHART_COLORS.brown,CHART_COLORS.pink,CHART_COLORS.gray];// ========================================================================\n// CSV VISUALIZATION COMPONENT\n// ========================================================================\nexport const CsvVisualization=_ref=>{let{width=1200,height=600,// Exactly 1/2 of width for 2:1 ratio\nshowControls=true,showLegend=true,onPeakClick}=_ref;const{csvOverlayState}=useCsvOverlayState();const chartRef=useRef(null);const[vizState,setVizState]=useState({selectedBand:'all',showPeaks:false,detectedPeaks:[],isAnalyzing:false,zoomLevel:1,isExporting:false,isEditingTitle:false,isEditingLegend:false,customTitle:'',customLegendLabels:{}});// ========================================================================\n// DATA PROCESSING\n// ========================================================================\n// Reset chart zoom when datasets change to prevent cropping issues\nReact.useEffect(()=>{if(chartRef.current){// Small delay to ensure chart has rendered with new/cleared data\nsetTimeout(()=>{if(chartRef.current){chartRef.current.resetZoom();console.log('🔄 Chart zoom reset for dataset change');}},100);}},[csvOverlayState.datasets.length,csvOverlayState.datasets]);const processedDatasets=useMemo(()=>{if(!csvOverlayState.datasets||csvOverlayState.datasets.length===0){return[];}return csvOverlayState.datasets.filter(dataset=>dataset.visible).map((dataset,index)=>{let processedData=dataset.data;// Auto-detect band from frequency range for labeling purposes only\nconst frequencies=dataset.data.map(point=>point.frequency/1e6);// Convert to MHz\nconst minFreq=Math.min(...frequencies);const maxFreq=Math.max(...frequencies);const detectedBand=CsvService.detectBandFromFrequencyRange(minFreq,maxFreq);// Only filter if user explicitly selects a band filter (not automatic)\nif(vizState.selectedBand!=='all'){// Filter to user-selected band only when explicitly requested\nconst bandDefinition=BAND_DEFINITIONS[vizState.selectedBand];const startHz=bandDefinition.startMHz*1e6;const endHz=bandDefinition.endMHz*1e6;processedData=dataset.data.filter(point=>point.frequency>=startHz&&point.frequency<=endHz);console.log(\"\\uD83C\\uDFAF User-filtered \".concat(dataset.filename,\" to band \").concat(vizState.selectedBand,\" (\").concat(bandDefinition.range,\"): \").concat(processedData.length,\" points\"));}else{// Show ALL data when no explicit filter is applied\nprocessedData=dataset.data;console.log(\"\\uD83D\\uDCCA Showing full dataset for \".concat(dataset.filename,\": \").concat(processedData.length,\" points (detected band: \").concat(detectedBand||'Unknown',\")\"));}// Use the color assigned during file loading (preserves panel colors)\nconst color=dataset.color||PROFESSIONAL_COLORS[index%PROFESSIONAL_COLORS.length];return _objectSpread(_objectSpread({},dataset),{},{data:processedData,color:color,frequencyData:processedData.map(point=>point.frequency/1e6),// Convert to MHz\namplitudeData:processedData.map(point=>point.amplitude),detectedBand:detectedBand});});},[csvOverlayState.datasets,vizState.selectedBand]);// ========================================================================\n// PROFESSIONAL CHART CONFIGURATION\n// ========================================================================\n// Calculate optimal x-axis ticks with dynamic units based on frequency range\nconst calculateOptimalTicks=useMemo(()=>{if(processedDatasets.length===0)return{min:0,max:1,step:0.1,ticks:[],unit:'MHz',unitMultiplier:1};// Use actual data range for x-axis instead of forcing band boundaries\nconst allFrequencies=processedDatasets.flatMap(dataset=>dataset.frequencyData);if(allFrequencies.length===0)return{min:0,max:1,step:0.1,ticks:[],unit:'MHz',unitMultiplier:1};let minFreq=Math.min(...allFrequencies);let maxFreq=Math.max(...allFrequencies);// Only use band boundaries if user has explicitly filtered to a single band\nif(vizState.selectedBand!=='all'){const bandDef=BAND_DEFINITIONS[vizState.selectedBand];minFreq=bandDef.startMHz;maxFreq=bandDef.endMHz;console.log(\"\\uD83C\\uDFAF Using band \".concat(vizState.selectedBand,\" boundaries for x-axis: \").concat(minFreq,\"-\").concat(maxFreq,\" MHz\"));}else{console.log(\"\\uD83D\\uDCCA Using full data range for x-axis: \".concat(minFreq.toFixed(3),\"-\").concat(maxFreq.toFixed(3),\" MHz\"));}// Determine the best unit based on frequency range\nlet unit,unitMultiplier,displayMin,displayMax;if(maxFreq<1){// Use kHz for frequencies below 1 MHz\nunit='kHz';unitMultiplier=1000;// Convert MHz to kHz\ndisplayMin=minFreq*unitMultiplier;displayMax=maxFreq*unitMultiplier;}else if(maxFreq<1000){// Use MHz for frequencies below 1000 MHz\nunit='MHz';unitMultiplier=1;// Already in MHz\ndisplayMin=minFreq*unitMultiplier;displayMax=maxFreq*unitMultiplier;}else{// Use GHz for frequencies 1000 MHz and above\nunit='GHz';unitMultiplier=0.001;// Convert MHz to GHz\ndisplayMin=minFreq*unitMultiplier;displayMax=maxFreq*unitMultiplier;}const range=displayMax-displayMin;// Calculate nice step size for exactly 10 divisions\nconst roughStep=range/10;// Round to nice numbers (prefer 0.001, 0.002, 0.005, 0.01, 0.02, 0.05, 0.1, etc.)\nconst magnitude=Math.pow(10,Math.floor(Math.log10(roughStep)));const normalized=roughStep/magnitude;let niceStep;if(normalized<=1)niceStep=magnitude;else if(normalized<=2)niceStep=2*magnitude;else if(normalized<=5)niceStep=5*magnitude;else niceStep=10*magnitude;// Use appropriate boundaries based on whether we're showing band-filtered or full data\nlet niceMin,niceMax;if(vizState.selectedBand!=='all'){// For band-filtered data, use exact band boundaries\nniceMin=displayMin;niceMax=displayMax;}else{// For full data, use nice rounded boundaries\nniceMin=Math.floor(displayMin/niceStep)*niceStep;niceMax=Math.ceil(displayMax/niceStep)*niceStep;}// Generate exactly 11 ticks (10 divisions) within the range\nconst ticks=[];for(let i=0;i<=10;i++){ticks.push(niceMin+i*((niceMax-niceMin)/10));}console.log(\"\\uD83D\\uDCCF Using \".concat(unit,\" units for frequency range \").concat(niceMin.toFixed(3),\"-\").concat(niceMax.toFixed(3),\" \").concat(unit));return{min:niceMin,max:niceMax,step:(niceMax-niceMin)/10,ticks:ticks,unit:unit,unitMultiplier:unitMultiplier,isBandConstrained:vizState.selectedBand!=='all',bandName:vizState.selectedBand!=='all'?vizState.selectedBand:null};},[processedDatasets,vizState.selectedBand]);const chartData=useMemo(()=>{console.log(\"\\uD83D\\uDCCA Processing \".concat(processedDatasets.length,\" datasets for visualization:\"),processedDatasets.map(d=>\"\".concat(d.filename,\" (\").concat(d.panelId,\") - \").concat(d.data.length,\" points\")));const optimalTicks=calculateOptimalTicks;const datasets=processedDatasets.map((dataset,index)=>({label:vizState.customLegendLabels[dataset.id]||dataset.label,data:dataset.frequencyData.map((freq,dataIndex)=>({x:freq*optimalTicks.unitMultiplier,// Convert to display units\ny:dataset.amplitudeData[dataIndex]})),borderColor:dataset.color,backgroundColor:\"\".concat(dataset.color,\"15\"),// 15% opacity\nborderWidth:4,// Thicker lines for better visibility\npointRadius:0,pointHoverRadius:6,pointHoverBorderWidth:2,pointHoverBorderColor:'#ffffff',fill:false,tension:0.1,spanGaps:false}));// NYCT limit lines removed per user request\nreturn{datasets};},[processedDatasets,calculateOptimalTicks,vizState.customLegendLabels]);const chartOptions=useMemo(()=>{const optimalTicks=calculateOptimalTicks;// Calculate optimal Y-axis ticks with 10-unit increments\nconst calculateOptimalYTicks=()=>{if(processedDatasets.length===0)return{min:0,max:100,step:10};const allAmplitudes=processedDatasets.flatMap(dataset=>dataset.amplitudeData);if(allAmplitudes.length===0)return{min:0,max:100,step:10};const minAmp=Math.min(...allAmplitudes);const maxAmp=Math.max(...allAmplitudes);// Round to nearest 10s with some padding\nconst yMin=Math.floor((minAmp-5)/10)*10;const yMax=Math.ceil((maxAmp+5)/10)*10;// Ensure we have at least a 30dB range for better visibility\nconst range=yMax-yMin;const minRange=30;if(range<minRange){const midPoint=(yMin+yMax)/2;const expandedMin=Math.floor((midPoint-minRange/2)/10)*10;const expandedMax=Math.ceil((midPoint+minRange/2)/10)*10;return{min:expandedMin,max:expandedMax,step:10};}return{min:yMin,max:yMax,step:10};};const yAxisTicks=calculateOptimalYTicks();return{responsive:true,maintainAspectRatio:false,devicePixelRatio:2,// High DPI rendering\nplugins:{title:{display:true,text:vizState.customTitle||(()=>{const leftPanelDatasets=processedDatasets.filter(d=>d.panelId==='dataset-a');const rightPanelDatasets=processedDatasets.filter(d=>d.panelId==='dataset-b');if(leftPanelDatasets.length>0&&rightPanelDatasets.length>0){const leftTitle=leftPanelDatasets[0].filename.replace('.csv','');const rightTitle=rightPanelDatasets[0].filename.replace('.csv','');return\"\".concat(leftTitle,\" vs. \").concat(rightTitle);}else if(leftPanelDatasets.length>0){return leftPanelDatasets[0].filename.replace('.csv','');}else if(rightPanelDatasets.length>0){return rightPanelDatasets[0].filename.replace('.csv','');}return'EMC Spectrum Analysis';})(),font:{size:18,weight:'bold',family:'Arial, sans-serif'},padding:20,color:'#2c3e50'},legend:{display:showLegend,position:'bottom',labels:{usePointStyle:true,pointStyle:'line',font:{size:12,family:'Arial, sans-serif'},padding:15}},tooltip:{mode:'nearest',intersect:false,backgroundColor:'rgba(0, 0, 0, 0.8)',titleColor:'#ffffff',bodyColor:'#ffffff',borderColor:'#ffffff',borderWidth:1,cornerRadius:6,displayColors:true,callbacks:{title:context=>{const freq=context[0].parsed.x;let formattedFreq;if(optimalTicks.unit==='kHz'){formattedFreq=freq>=100?freq.toFixed(0):freq.toFixed(1);}else if(optimalTicks.unit==='MHz'){formattedFreq=freq>=100?freq.toFixed(0):freq.toFixed(1);}else{// GHz\nformattedFreq=freq.toFixed(2);}return\"Frequency: \".concat(formattedFreq,\" \").concat(optimalTicks.unit);},label:context=>{return\"\".concat(context.dataset.label,\": \").concat(context.parsed.y.toFixed(2),\" dB\\u03BCV/m\");}}},zoom:{zoom:{wheel:{enabled:true,modifierKey:'ctrl'},pinch:{enabled:true},mode:'xy',onZoom:_ref2=>{let{chart}=_ref2;const zoomLevel=chart.getZoomLevel();setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{zoomLevel}));}},pan:{enabled:true,mode:'xy'}}},scales:{x:{type:'linear',title:{display:true,text:\"Frequency (\".concat(optimalTicks.unit,\")\"),font:{size:14,weight:'bold',family:'Arial, sans-serif'},color:'#2c3e50'},grid:{color:'rgba(0, 0, 0, 0.1)',lineWidth:1},min:optimalTicks.min,max:optimalTicks.max,ticks:{font:{size:11,family:'Arial, sans-serif'},color:'#2c3e50',count:11,// Force exactly 11 ticks = 10 divisions\nmin:optimalTicks.min,max:optimalTicks.max,stepSize:optimalTicks.step,callback:function(value){const numValue=Number(value);// Format numbers based on the unit being used\nif(optimalTicks.unit==='kHz'){if(numValue>=1000){return(numValue/1000).toFixed(1)+'k';}else if(numValue>=100){return numValue.toFixed(0);}else if(numValue>=10){return numValue.toFixed(1);}else{return numValue.toFixed(2);}}else if(optimalTicks.unit==='MHz'){if(numValue>=1000){return(numValue/1000).toFixed(1)+'k';}else if(numValue>=100){return numValue.toFixed(0);}else if(numValue>=1){return numValue.toFixed(1);}else{return numValue.toFixed(2);}}else{// GHz\nif(numValue>=1){return numValue.toFixed(1);}else{return numValue.toFixed(2);}}}}},y:{position:'left',title:{display:true,text:'Amplitude (dBμV/m)',font:{size:14,weight:'bold',family:'Arial, sans-serif'},color:'#2c3e50'},grid:{color:'rgba(0, 0, 0, 0.1)',lineWidth:1},min:yAxisTicks.min,max:yAxisTicks.max,ticks:{font:{size:11,family:'Arial, sans-serif'},color:'#2c3e50',stepSize:yAxisTicks.step,// Always 10 dB increments\ncallback:function(value){return Number(value).toFixed(0)+' dB';}}}},interaction:{intersect:false,mode:'nearest'},onClick:(event,elements)=>{if(elements.length>0&&onPeakClick){const element=elements[0];const datasetIndex=element.datasetIndex;const dataIndex=element.index;if(datasetIndex<processedDatasets.length){const dataset=processedDatasets[datasetIndex];const frequency=dataset.frequencyData[dataIndex];const amplitude=dataset.amplitudeData[dataIndex];// Find if this point is a detected peak\nconst peakData=vizState.detectedPeaks.find(p=>p.dataset.id===dataset.id);const peak=peakData===null||peakData===void 0?void 0:peakData.peaks.find(p=>Math.abs(p.frequency-frequency)<0.001&&Math.abs(p.amplitude-amplitude)<0.1);if(peak){onPeakClick(peak,dataset);}}}}};},[showLegend,processedDatasets,vizState.detectedPeaks,onPeakClick,calculateOptimalTicks,vizState.customTitle]);// ========================================================================\n// EXPORT FUNCTIONALITY\n// ========================================================================\nconst exportChart=useCallback(async function(){let exportType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'zoom';let format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'png';if(!chartRef.current)return;setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{isExporting:true}));try{// Handle original view export by temporarily resetting zoom\nif(exportType==='original'){chartRef.current.resetZoom();await new Promise(resolve=>setTimeout(resolve,100));// Wait for reset\n}// Calculate optimal Y-axis ticks with 10-unit increments for export\nconst calculateOptimalYTicksForExport=()=>{if(processedDatasets.length===0)return{min:0,max:100,step:10};const allAmplitudes=processedDatasets.flatMap(dataset=>dataset.amplitudeData);if(allAmplitudes.length===0)return{min:0,max:100,step:10};const minAmp=Math.min(...allAmplitudes);const maxAmp=Math.max(...allAmplitudes);// Round to nearest 10s with some padding for better visualization\nconst yMin=Math.floor((minAmp-5)/10)*10;const yMax=Math.ceil((maxAmp+5)/10)*10;// Ensure we have at least a 30dB range for better visibility\nconst range=yMax-yMin;const minRange=30;if(range<minRange){const midPoint=(yMin+yMax)/2;const expandedMin=Math.floor((midPoint-minRange/2)/10)*10;const expandedMax=Math.ceil((midPoint+minRange/2)/10)*10;return{min:expandedMin,max:expandedMax,step:10};}return{min:yMin,max:yMax,step:10};};const exportYAxisTicks=calculateOptimalYTicksForExport();// Create export-specific chart with thinner lines\nconst exportCanvas=document.createElement('canvas');const exportCtx=exportCanvas.getContext('2d');if(!exportCtx)throw new Error('Could not create export canvas');// Set high resolution (300 DPI equivalent)\nconst scale=4;// Increased scale for better quality\nconst originalCanvas=chartRef.current.canvas;exportCanvas.width=originalCanvas.width*scale;exportCanvas.height=originalCanvas.height*scale;// Set white background\nexportCtx.fillStyle='#ffffff';exportCtx.fillRect(0,0,exportCanvas.width,exportCanvas.height);// Create export chart with thinner lines\nconst exportChartCanvas=document.createElement('canvas');const exportChartCtx=exportChartCanvas.getContext('2d');exportChartCanvas.width=originalCanvas.width;exportChartCanvas.height=originalCanvas.height;if(!exportChartCtx)throw new Error('Could not create export chart canvas');// Create a new chart instance for export with thinner lines\nconst optimalTicks=calculateOptimalTicks;const exportChartData={datasets:processedDatasets.map((dataset,index)=>({label:vizState.customLegendLabels[dataset.id]||dataset.label,data:dataset.frequencyData.map((freq,dataIndex)=>({x:freq*optimalTicks.unitMultiplier,// Convert to display units\ny:dataset.amplitudeData[dataIndex]})),borderColor:dataset.color,backgroundColor:\"\".concat(dataset.color,\"15\"),// 15% opacity\nborderWidth:3,// Thick lines for good visibility in export\npointRadius:0,pointHoverRadius:0,pointHoverBorderWidth:0,fill:false,tension:0.1,spanGaps:false}))};// Create temporary chart for export\nconst tempChart=new ChartJS(exportChartCanvas,{type:'line',data:exportChartData,options:{responsive:false,maintainAspectRatio:false,devicePixelRatio:1,animation:false,plugins:{title:{display:true,text:(()=>{// Use custom title if it exists, otherwise generate automatically\nif(vizState.customTitle&&vizState.customTitle.trim()){return vizState.customTitle;}const leftPanelDatasets=processedDatasets.filter(d=>d.panelId==='dataset-a');const rightPanelDatasets=processedDatasets.filter(d=>d.panelId==='dataset-b');if(leftPanelDatasets.length>0&&rightPanelDatasets.length>0){const leftTitle=leftPanelDatasets[0].filename.replace('.csv','');const rightTitle=rightPanelDatasets[0].filename.replace('.csv','');return\"\".concat(leftTitle,\" vs. \").concat(rightTitle);}else if(leftPanelDatasets.length>0){return leftPanelDatasets[0].filename.replace('.csv','');}else if(rightPanelDatasets.length>0){return rightPanelDatasets[0].filename.replace('.csv','');}return'EMC Spectrum Analysis';})(),font:{size:36,weight:'bold',family:'Arial, sans-serif'},padding:40,color:'#2c3e50'},legend:{display:showLegend,position:'bottom',labels:{usePointStyle:true,pointStyle:'line',font:{size:24,family:'Arial, sans-serif'},padding:30}},tooltip:{enabled:false}},scales:{x:{type:'linear',title:{display:true,text:\"Frequency (\".concat(optimalTicks.unit,\")\"),font:{size:28,weight:'bold',family:'Arial, sans-serif'},color:'#2c3e50'},grid:{color:'rgba(0, 0, 0, 0.1)',lineWidth:1},min:optimalTicks.min,max:optimalTicks.max,ticks:{font:{size:22,family:'Arial, sans-serif'},color:'#2c3e50',count:11,callback:function(value){const numValue=Number(value);if(optimalTicks.unit==='kHz'){if(numValue>=1000)return(numValue/1000).toFixed(1)+'k';else if(numValue>=100)return numValue.toFixed(0);else if(numValue>=10)return numValue.toFixed(1);else return numValue.toFixed(2);}else if(optimalTicks.unit==='MHz'){if(numValue>=1000)return(numValue/1000).toFixed(1)+'k';else if(numValue>=100)return numValue.toFixed(0);else if(numValue>=1)return numValue.toFixed(1);else return numValue.toFixed(2);}else{if(numValue>=1)return numValue.toFixed(1);else return numValue.toFixed(2);}}}},y:{position:'left',title:{display:true,text:'Amplitude (dBμV/m)',font:{size:28,weight:'bold',family:'Arial, sans-serif'},color:'#2c3e50'},grid:{color:'rgba(0, 0, 0, 0.1)',lineWidth:1},min:exportYAxisTicks.min,max:exportYAxisTicks.max,ticks:{font:{size:22,family:'Arial, sans-serif'},color:'#2c3e50',stepSize:exportYAxisTicks.step,// Always 10 dB increments\ncallback:function(value){return Number(value).toFixed(0)+' dB';}}}},interaction:{intersect:false,mode:'nearest'}}});// Copy current zoom state if needed\nif(exportType==='zoom'&&chartRef.current){var _currentOptions$scale,_currentOptions$scale2;const currentOptions=chartRef.current.options;if(currentOptions!==null&&currentOptions!==void 0&&(_currentOptions$scale=currentOptions.scales)!==null&&_currentOptions$scale!==void 0&&_currentOptions$scale.x&&currentOptions!==null&&currentOptions!==void 0&&(_currentOptions$scale2=currentOptions.scales)!==null&&_currentOptions$scale2!==void 0&&_currentOptions$scale2.y){tempChart.options.scales.x.min=currentOptions.scales.x.min;tempChart.options.scales.x.max=currentOptions.scales.x.max;// For zoom exports, also use the current y-axis range instead of the calculated optimal range\ntempChart.options.scales.y.min=currentOptions.scales.y.min;tempChart.options.scales.y.max=currentOptions.scales.y.max;// Recalculate stepSize for zoom export to ensure 10 increments\nconst zoomYRange=currentOptions.scales.y.max-currentOptions.scales.y.min;tempChart.options.scales.y.ticks.stepSize=zoomYRange/10;}}// Render the export chart\ntempChart.update('none');await new Promise(resolve=>setTimeout(resolve,100));// Wait for render\n// Enable high-quality rendering\nexportCtx.imageSmoothingEnabled=true;exportCtx.imageSmoothingQuality='high';// Scale and draw the clean chart (no annotations)\nexportCtx.scale(scale,scale);exportCtx.drawImage(exportChartCanvas,0,0);// Generate professional filename based on datasets\nconst leftPanelDatasets=processedDatasets.filter(d=>d.panelId==='dataset-a');const rightPanelDatasets=processedDatasets.filter(d=>d.panelId==='dataset-b');let filename='';if(leftPanelDatasets.length>0&&rightPanelDatasets.length>0){const leftNames=leftPanelDatasets.map(d=>d.filename.replace('.csv','')).join('+');const rightNames=rightPanelDatasets.map(d=>d.filename.replace('.csv','')).join('+');filename=\"\".concat(leftNames,\" vs \").concat(rightNames);}else if(leftPanelDatasets.length>0){filename=leftPanelDatasets.map(d=>d.filename.replace('.csv','')).join('+');}else if(rightPanelDatasets.length>0){filename=rightPanelDatasets.map(d=>d.filename.replace('.csv','')).join('+');}else{filename='EMC_Spectrum_Analysis';}// Add timestamp\nconst timestamp=new Date().toISOString().split('T')[0];const exportSuffix=exportType==='original'?'_Original':'_Zoomed';filename=\"\".concat(filename).concat(exportSuffix,\"_\").concat(timestamp);// Clean up temporary chart\ntempChart.destroy();// Convert to blob and download\nexportCanvas.toBlob(blob=>{if(blob){const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"\".concat(filename,\".\").concat(format);document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);console.log(\"\\uD83D\\uDCF8 Chart exported as: \".concat(filename,\".\").concat(format,\" (\").concat(exportType,\" view)\"));}},\"image/\".concat(format),0.95);}catch(error){console.error('Export failed:',error);alert('Export failed. Please try again.');}finally{setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{isExporting:false}));}},[processedDatasets,calculateOptimalTicks,showLegend,vizState.customTitle,vizState.customLegendLabels]);// ========================================================================\n// CHART CONTROLS\n// ========================================================================\n// ========================================================================\n// EDIT FUNCTIONALITY\n// ========================================================================\nconst handleTitleEdit=newTitle=>{setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{customTitle:newTitle,isEditingTitle:false}));};const handleLegendEdit=(datasetId,newLabel)=>{setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{customLegendLabels:_objectSpread(_objectSpread({},prev.customLegendLabels),{},{[datasetId]:newLabel})}));};// ========================================================================\n// RENDER HELPERS\n// ========================================================================\nconst renderEditControls=()=>{if(csvOverlayState.datasets.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"edit-controls professional\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'12px',alignItems:'center',justifyContent:'center',flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{isEditingTitle:!prev.isEditingTitle})),className:\"edit-btn\",style:{backgroundColor:vizState.isEditingTitle?'#e74c3c':'#3498db',border:'none',color:'white',padding:'8px 16px',borderRadius:'6px',fontWeight:'500',fontSize:'14px',cursor:'pointer',boxShadow:'0 2px 8px rgba(52, 152, 219, 0.3)',transition:'all 0.2s ease',display:'flex',alignItems:'center',gap:'6px'},children:[\"\\u270F\\uFE0F \",vizState.isEditingTitle?'Cancel':'Edit Title']}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{isEditingLegend:!prev.isEditingLegend})),className:\"edit-btn\",style:{backgroundColor:vizState.isEditingLegend?'#e74c3c':'#2ecc71',border:'none',color:'white',padding:'8px 16px',borderRadius:'6px',fontWeight:'500',fontSize:'14px',cursor:'pointer',boxShadow:'0 2px 8px rgba(46, 204, 113, 0.3)',transition:'all 0.2s ease',display:'flex',alignItems:'center',gap:'6px'},children:[\"\\uD83C\\uDFF7\\uFE0F \",vizState.isEditingLegend?'Done':'Edit Labels']}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{customTitle:'',customLegendLabels:{},isEditingTitle:false,isEditingLegend:false})),className:\"reset-btn\",style:{backgroundColor:'#95a5a6',border:'none',color:'white',padding:'8px 16px',borderRadius:'6px',fontWeight:'500',fontSize:'14px',cursor:'pointer',boxShadow:'0 2px 8px rgba(149, 165, 166, 0.3)',transition:'all 0.2s ease',display:'flex',alignItems:'center',gap:'6px'},children:\"\\uD83D\\uDD04 Reset\"})]}),(vizState.customTitle||Object.keys(vizState.customLegendLabels).length>0)&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'8px',padding:'8px 12px',backgroundColor:'rgba(52, 152, 219, 0.1)',borderRadius:'6px',textAlign:'center'},children:/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'12px',color:'#2c3e50',fontWeight:'500'},children:\"\\u2728 Custom title and labels will be included in exports\"})}),vizState.isEditingTitle&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'12px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter custom chart title...\",defaultValue:vizState.customTitle,onKeyPress:e=>{if(e.key==='Enter'){handleTitleEdit(e.target.value);}},onBlur:e=>handleTitleEdit(e.target.value),autoFocus:true,style:{padding:'12px 16px',border:'2px solid #3498db',borderRadius:'8px',fontSize:'16px',fontWeight:'bold',textAlign:'center',minWidth:'300px',maxWidth:'600px',width:'100%',fontFamily:'Arial, sans-serif'}}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'6px',fontSize:'12px',color:'#7f8c8d'},children:\"Press Enter or click away to save\"})]}),vizState.isEditingLegend&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'12px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(250px, 1fr))',gap:'12px',maxWidth:'800px',margin:'0 auto'},children:processedDatasets.map(dataset=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'8px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'20px',height:'20px',backgroundColor:dataset.color,borderRadius:'50%',flexShrink:0,border:'2px solid white',boxShadow:'0 1px 3px rgba(0,0,0,0.3)'}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:dataset.label,defaultValue:vizState.customLegendLabels[dataset.id]||'',onKeyPress:e=>{if(e.key==='Enter'){handleLegendEdit(dataset.id,e.target.value);}},onBlur:e=>handleLegendEdit(dataset.id,e.target.value),style:{padding:'8px 12px',border:'2px solid #2ecc71',borderRadius:'6px',fontSize:'14px',flex:1,fontFamily:'Arial, sans-serif'}})]},dataset.id))}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'8px',fontSize:'12px',color:'#7f8c8d',textAlign:'center'},children:\"Press Enter or click away to save changes\"})]})]});};const renderControls=()=>{if(!showControls||csvOverlayState.datasets.length===0)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"chart-controls professional compact\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"band-filter-control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"band-filter-select\",className:\"filter-label\",children:\"Band Filter:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"band-filter-select\",value:vizState.selectedBand,onChange:e=>setVizState(prev=>_objectSpread(_objectSpread({},prev),{},{selectedBand:e.target.value})),className:\"band-filter-select\",style:{padding:'6px 12px',marginLeft:'8px',borderRadius:'4px',border:'1px solid #ddd',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"Show All Data (No Filtering)\"}),Object.entries(BAND_DEFINITIONS).map(_ref3=>{let[bandType,definition]=_ref3;return/*#__PURE__*/_jsxs(\"option\",{value:bandType,children:[\"Filter to \",bandType,\": \",definition.range]},bandType);})]})]})});};const renderExportControls=()=>{if(csvOverlayState.datasets.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"export-controls professional\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'12px',flexDirection:'row',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportChart('original','png'),className:\"export-btn primary simple\",disabled:vizState.isExporting||processedDatasets.length===0,style:{backgroundColor:vizState.isExporting?'#95a5a6':'#3498db',border:'none',color:'white',padding:'12px 24px',borderRadius:'8px',fontWeight:'bold',fontSize:'16px',cursor:vizState.isExporting?'not-allowed':'pointer',boxShadow:vizState.isExporting?'none':'0 4px 12px rgba(52, 152, 219, 0.3)',transform:vizState.isExporting?'none':'translateY(-1px)',transition:'all 0.2s ease',minWidth:'200px'},children:vizState.isExporting?'⏳ Exporting...':'📈 Export Default View'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>exportChart('zoom','png'),className:\"export-btn primary simple\",disabled:vizState.isExporting||processedDatasets.length===0,style:{backgroundColor:vizState.isExporting?'#95a5a6':'#2ecc71',border:'none',color:'white',padding:'12px 24px',borderRadius:'8px',fontWeight:'bold',fontSize:'16px',cursor:vizState.isExporting?'not-allowed':'pointer',boxShadow:vizState.isExporting?'none':'0 4px 12px rgba(46, 204, 113, 0.3)',transform:vizState.isExporting?'none':'translateY(-1px)',transition:'all 0.2s ease',minWidth:'200px'},children:vizState.isExporting?'⏳ Exporting...':'🔍 Export Zoom View'})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'8px',fontSize:'12px',color:'#7f8c8d',textAlign:'center'},children:(()=>{const optimalTicks=calculateOptimalTicks;if(optimalTicks.isBandConstrained){return\"\\uD83D\\uDCCA Default export shows Band \".concat(optimalTicks.bandName,\" with 10-division axis (\").concat(optimalTicks.min.toFixed(3),\"-\").concat(optimalTicks.max.toFixed(3),\" \").concat(optimalTicks.unit,\") | Zoom export captures current view\");}else{return\"\\uD83D\\uDCCA Default export shows optimized 10-division frequency axis | Zoom export captures current view\";}})()})]});};// ========================================================================\n// MAIN RENDER\n// ========================================================================\nif(csvOverlayState.datasets.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"csv-visualization-empty professional\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"EMC Spectrum Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Professional Data Visualization & Comparison\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"csv-visualization professional\",children:[renderControls(),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container professional\",children:/*#__PURE__*/_jsx(Line,{ref:chartRef,data:chartData,options:chartOptions,width:width,height:height})}),renderEditControls(),renderExportControls()]});};export default CsvVisualization;","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","Chart","ChartJS","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","zoomPlugin","useCsvOverlayState","CsvService","BAND_DEFINITIONS","jsxs","_jsxs","jsx","_jsx","register","CHART_COLORS","primary","orange","green","red","purple","brown","pink","gray","olive","cyan","PROFESSIONAL_COLORS","CsvVisualization","_ref","width","height","showControls","showLegend","onPeakClick","csvOverlayState","chartRef","vizState","setVizState","selectedBand","showPeaks","detectedPeaks","isAnalyzing","zoomLevel","isExporting","isEditingTitle","isEditingLegend","customTitle","customLegendLabels","useEffect","current","setTimeout","resetZoom","console","log","datasets","length","processedDatasets","filter","dataset","visible","map","index","processedData","data","frequencies","point","frequency","minFreq","Math","min","maxFreq","max","detectedBand","detectBandFromFrequencyRange","bandDefinition","startHz","startMHz","endHz","endMHz","concat","filename","range","color","_objectSpread","frequencyData","amplitudeData","amplitude","calculateOptimalTicks","step","ticks","unit","unitMultiplier","allFrequencies","flatMap","bandDef","toFixed","displayMin","displayMax","roughStep","magnitude","pow","floor","log10","normalized","niceStep","niceMin","niceMax","ceil","i","push","isBandConstrained","bandName","chartData","d","panelId","optimalTicks","label","id","freq","dataIndex","x","y","borderColor","backgroundColor","borderWidth","pointRadius","pointHoverRadius","pointHoverBorderWidth","pointHoverBorderColor","fill","tension","spanGaps","chartOptions","calculateOptimalYTicks","allAmplitudes","minAmp","maxAmp","yMin","yMax","minRange","midPoint","expandedMin","expandedMax","yAxisTicks","responsive","maintainAspectRatio","devicePixelRatio","plugins","title","display","text","leftPanelDatasets","rightPanelDatasets","leftTitle","replace","rightTitle","font","size","weight","family","padding","legend","position","labels","usePointStyle","pointStyle","tooltip","mode","intersect","titleColor","bodyColor","cornerRadius","displayColors","callbacks","context","parsed","formattedFreq","zoom","wheel","enabled","modifierKey","pinch","onZoom","_ref2","chart","getZoomLevel","prev","pan","scales","type","grid","lineWidth","count","stepSize","callback","value","numValue","Number","interaction","onClick","event","elements","element","datasetIndex","peakData","find","p","peak","peaks","abs","exportChart","exportType","arguments","undefined","format","Promise","resolve","calculateOptimalYTicksForExport","exportYAxisTicks","exportCanvas","document","createElement","exportCtx","getContext","Error","scale","originalCanvas","canvas","fillStyle","fillRect","exportChartCanvas","exportChartCtx","exportChartData","tempChart","options","animation","trim","_currentOptions$scale","_currentOptions$scale2","currentOptions","zoomYRange","update","imageSmoothingEnabled","imageSmoothingQuality","drawImage","leftNames","join","rightNames","timestamp","Date","toISOString","split","exportSuffix","destroy","toBlob","blob","url","URL","createObjectURL","a","href","download","body","appendChild","click","removeChild","revokeObjectURL","error","alert","handleTitleEdit","newTitle","handleLegendEdit","datasetId","newLabel","renderEditControls","className","children","style","gap","alignItems","justifyContent","flexWrap","border","borderRadius","fontWeight","fontSize","cursor","boxShadow","transition","Object","keys","marginTop","textAlign","placeholder","defaultValue","onKeyPress","e","key","target","onBlur","autoFocus","minWidth","maxWidth","fontFamily","gridTemplateColumns","margin","flexShrink","flex","renderControls","htmlFor","onChange","marginLeft","entries","_ref3","bandType","definition","renderExportControls","flexDirection","disabled","transform","ref"],"sources":["/Users/howardwang/Desktop/Turner Engineering/Software Product Design/reda-main/typescript-react-app/src/components/CsvVisualization/CsvVisualization.tsx"],"sourcesContent":["// ========================================================================\n// REDA EMC Testing Tool - CSV Visualization Component (Enhanced)\n// ========================================================================\n// Turner Engineering Corporation - Professional EMC Testing Support\n// \n// Professional Chart.js visualization with matplotlib-quality styling\n// ========================================================================\n\nimport React, { useRef, useState, useCallback, useMemo } from 'react';\nimport {\n  Chart as ChartJS,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartOptions,\n  ChartData\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { useCsvOverlayState } from '../../context/AppContext';\nimport { CsvService } from '../../services/CsvService';\nimport { CsvOverlayDataset, DetectedPeak, BandType } from '../../types';\nimport { BAND_DEFINITIONS } from '../../constants';\nimport './CsvVisualization.css';\n\n// Register Chart.js components\nChartJS.register(\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  zoomPlugin\n);\n\n// ========================================================================\n// COMPONENT INTERFACES\n// ========================================================================\n\ninterface CsvVisualizationProps {\n  width?: number;\n  height?: number;\n  showControls?: boolean;\n  showLegend?: boolean;\n  onPeakClick?: (peak: DetectedPeak, dataset: CsvOverlayDataset) => void;\n}\n\ninterface VisualizationState {\n  selectedBand: BandType | 'all';\n  showPeaks: boolean;\n  detectedPeaks: Array<{ dataset: CsvOverlayDataset; peaks: DetectedPeak[] }>;\n  isAnalyzing: boolean;\n  zoomLevel: number;\n  isExporting: boolean;\n  isEditingTitle: boolean;\n  isEditingLegend: boolean;\n  customTitle: string;\n  customLegendLabels: { [key: string]: string };\n}\n\n// ========================================================================\n// PROFESSIONAL CHART STYLING (MATPLOTLIB-INSPIRED)\n// ========================================================================\n\nconst CHART_COLORS = {\n  primary: '#1f77b4',    // Matplotlib default blue\n  orange: '#ff7f0e',     // Matplotlib orange\n  green: '#2ca02c',      // Matplotlib green\n  red: '#d62728',        // Matplotlib red\n  purple: '#9467bd',     // Matplotlib purple\n  brown: '#8c564b',      // Matplotlib brown\n  pink: '#e377c2',       // Matplotlib pink\n  gray: '#7f7f7f',       // Matplotlib gray\n  olive: '#bcbd22',      // Matplotlib olive\n  cyan: '#17becf'        // Matplotlib cyan\n};\n\nconst PROFESSIONAL_COLORS = [\n  CHART_COLORS.primary,\n  CHART_COLORS.orange,\n  CHART_COLORS.green,\n  CHART_COLORS.red,\n  CHART_COLORS.purple,\n  CHART_COLORS.brown,\n  CHART_COLORS.pink,\n  CHART_COLORS.gray\n];\n\n// ========================================================================\n// CSV VISUALIZATION COMPONENT\n// ========================================================================\n\nexport const CsvVisualization: React.FC<CsvVisualizationProps> = ({\n  width = 1200,\n  height = 600, // Exactly 1/2 of width for 2:1 ratio\n  showControls = true,\n  showLegend = true,\n  onPeakClick\n}) => {\n  const { csvOverlayState } = useCsvOverlayState();\n  const chartRef = useRef<ChartJS<'line'>>(null);\n\n  const [vizState, setVizState] = useState<VisualizationState>({\n    selectedBand: 'all',\n    showPeaks: false,\n    detectedPeaks: [],\n    isAnalyzing: false,\n    zoomLevel: 1,\n    isExporting: false,\n    isEditingTitle: false,\n    isEditingLegend: false,\n    customTitle: '',\n    customLegendLabels: {}\n  });\n\n  // ========================================================================\n  // DATA PROCESSING\n  // ========================================================================\n\n  // Reset chart zoom when datasets change to prevent cropping issues\n  React.useEffect(() => {\n    if (chartRef.current) {\n              // Small delay to ensure chart has rendered with new/cleared data\n      setTimeout(() => {\n        if (chartRef.current) {\n          chartRef.current.resetZoom();\n          console.log('🔄 Chart zoom reset for dataset change');\n        }\n      }, 100);\n    }\n  }, [csvOverlayState.datasets.length, csvOverlayState.datasets]);\n\n  const processedDatasets = useMemo(() => {\n    if (!csvOverlayState.datasets || csvOverlayState.datasets.length === 0) {\n      return [];\n    }\n\n    return csvOverlayState.datasets\n      .filter(dataset => dataset.visible)\n      .map((dataset, index) => {\n        let processedData = dataset.data;\n\n        // Auto-detect band from frequency range for labeling purposes only\n        const frequencies = dataset.data.map(point => point.frequency / 1e6); // Convert to MHz\n        const minFreq = Math.min(...frequencies);\n        const maxFreq = Math.max(...frequencies);\n        const detectedBand = CsvService.detectBandFromFrequencyRange(minFreq, maxFreq);\n        \n        // Only filter if user explicitly selects a band filter (not automatic)\n        if (vizState.selectedBand !== 'all') {\n          // Filter to user-selected band only when explicitly requested\n          const bandDefinition = BAND_DEFINITIONS[vizState.selectedBand];\n          const startHz = bandDefinition.startMHz * 1e6;\n          const endHz = bandDefinition.endMHz * 1e6;\n          \n          processedData = dataset.data.filter(point => \n            point.frequency >= startHz && point.frequency <= endHz\n          );\n          \n          console.log(`🎯 User-filtered ${dataset.filename} to band ${vizState.selectedBand} (${bandDefinition.range}): ${processedData.length} points`);\n        } else {\n          // Show ALL data when no explicit filter is applied\n          processedData = dataset.data;\n          console.log(`📊 Showing full dataset for ${dataset.filename}: ${processedData.length} points (detected band: ${detectedBand || 'Unknown'})`);\n        }\n\n        // Use the color assigned during file loading (preserves panel colors)\n        const color = dataset.color || PROFESSIONAL_COLORS[index % PROFESSIONAL_COLORS.length];\n\n        return {\n          ...dataset,\n          data: processedData,\n          color: color,\n          frequencyData: processedData.map(point => point.frequency / 1e6), // Convert to MHz\n          amplitudeData: processedData.map(point => point.amplitude),\n          detectedBand: detectedBand\n        };\n      });\n  }, [csvOverlayState.datasets, vizState.selectedBand]);\n\n  // ========================================================================\n  // PROFESSIONAL CHART CONFIGURATION\n  // ========================================================================\n\n  // Calculate optimal x-axis ticks with dynamic units based on frequency range\n  const calculateOptimalTicks = useMemo(() => {\n    if (processedDatasets.length === 0) return { min: 0, max: 1, step: 0.1, ticks: [], unit: 'MHz', unitMultiplier: 1 };\n\n    // Use actual data range for x-axis instead of forcing band boundaries\n    const allFrequencies = processedDatasets.flatMap(dataset => dataset.frequencyData);\n    if (allFrequencies.length === 0) return { min: 0, max: 1, step: 0.1, ticks: [], unit: 'MHz', unitMultiplier: 1 };\n    \n    let minFreq = Math.min(...allFrequencies);\n    let maxFreq = Math.max(...allFrequencies);\n    \n    // Only use band boundaries if user has explicitly filtered to a single band\n    if (vizState.selectedBand !== 'all') {\n      const bandDef = BAND_DEFINITIONS[vizState.selectedBand];\n      minFreq = bandDef.startMHz;\n      maxFreq = bandDef.endMHz;\n      console.log(`🎯 Using band ${vizState.selectedBand} boundaries for x-axis: ${minFreq}-${maxFreq} MHz`);\n    } else {\n      console.log(`📊 Using full data range for x-axis: ${minFreq.toFixed(3)}-${maxFreq.toFixed(3)} MHz`);\n    }\n\n    // Determine the best unit based on frequency range\n    let unit, unitMultiplier, displayMin, displayMax;\n    \n    if (maxFreq < 1) {\n      // Use kHz for frequencies below 1 MHz\n      unit = 'kHz';\n      unitMultiplier = 1000; // Convert MHz to kHz\n      displayMin = minFreq * unitMultiplier;\n      displayMax = maxFreq * unitMultiplier;\n    } else if (maxFreq < 1000) {\n      // Use MHz for frequencies below 1000 MHz\n      unit = 'MHz';\n      unitMultiplier = 1; // Already in MHz\n      displayMin = minFreq * unitMultiplier;\n      displayMax = maxFreq * unitMultiplier;\n    } else {\n      // Use GHz for frequencies 1000 MHz and above\n      unit = 'GHz';\n      unitMultiplier = 0.001; // Convert MHz to GHz\n      displayMin = minFreq * unitMultiplier;\n      displayMax = maxFreq * unitMultiplier;\n    }\n\n    const range = displayMax - displayMin;\n\n    // Calculate nice step size for exactly 10 divisions\n    const roughStep = range / 10;\n    \n    // Round to nice numbers (prefer 0.001, 0.002, 0.005, 0.01, 0.02, 0.05, 0.1, etc.)\n    const magnitude = Math.pow(10, Math.floor(Math.log10(roughStep)));\n    const normalized = roughStep / magnitude;\n    \n    let niceStep;\n    if (normalized <= 1) niceStep = magnitude;\n    else if (normalized <= 2) niceStep = 2 * magnitude;\n    else if (normalized <= 5) niceStep = 5 * magnitude;\n    else niceStep = 10 * magnitude;\n\n    // Use appropriate boundaries based on whether we're showing band-filtered or full data\n    let niceMin, niceMax;\n    if (vizState.selectedBand !== 'all') {\n      // For band-filtered data, use exact band boundaries\n      niceMin = displayMin;\n      niceMax = displayMax;\n    } else {\n      // For full data, use nice rounded boundaries\n      niceMin = Math.floor(displayMin / niceStep) * niceStep;\n      niceMax = Math.ceil(displayMax / niceStep) * niceStep;\n    }\n    \n    // Generate exactly 11 ticks (10 divisions) within the range\n    const ticks = [];\n    for (let i = 0; i <= 10; i++) {\n      ticks.push(niceMin + i * ((niceMax - niceMin) / 10));\n    }\n\n    console.log(`📏 Using ${unit} units for frequency range ${niceMin.toFixed(3)}-${niceMax.toFixed(3)} ${unit}`);\n\n    return {\n      min: niceMin,\n      max: niceMax,\n      step: (niceMax - niceMin) / 10,\n      ticks: ticks,\n      unit: unit,\n      unitMultiplier: unitMultiplier,\n      isBandConstrained: vizState.selectedBand !== 'all',\n      bandName: vizState.selectedBand !== 'all' ? vizState.selectedBand : null\n    };\n  }, [processedDatasets, vizState.selectedBand]);\n\n  const chartData: ChartData<'line'> = useMemo(() => {\n    console.log(`📊 Processing ${processedDatasets.length} datasets for visualization:`, \n      processedDatasets.map(d => `${d.filename} (${d.panelId}) - ${d.data.length} points`));\n    \n    const optimalTicks = calculateOptimalTicks;\n    \n    const datasets = processedDatasets.map((dataset, index) => ({\n      label: vizState.customLegendLabels[dataset.id] || dataset.label,\n      data: dataset.frequencyData.map((freq, dataIndex) => ({\n        x: freq * optimalTicks.unitMultiplier, // Convert to display units\n        y: dataset.amplitudeData[dataIndex]\n      })),\n      borderColor: dataset.color,\n      backgroundColor: `${dataset.color}15`, // 15% opacity\n      borderWidth: 4, // Thicker lines for better visibility\n      pointRadius: 0,\n      pointHoverRadius: 6,\n      pointHoverBorderWidth: 2,\n      pointHoverBorderColor: '#ffffff',\n      fill: false,\n      tension: 0.1,\n      spanGaps: false\n    }));\n\n    // NYCT limit lines removed per user request\n\n    return { datasets };\n  }, [processedDatasets, calculateOptimalTicks, vizState.customLegendLabels]);\n\n  const chartOptions: ChartOptions<'line'> = useMemo(() => {\n    const optimalTicks = calculateOptimalTicks;\n    \n    // Calculate optimal Y-axis ticks with 10-unit increments\n    const calculateOptimalYTicks = () => {\n      if (processedDatasets.length === 0) return { min: 0, max: 100, step: 10 };\n      \n      const allAmplitudes = processedDatasets.flatMap(dataset => dataset.amplitudeData);\n      if (allAmplitudes.length === 0) return { min: 0, max: 100, step: 10 };\n      \n      const minAmp = Math.min(...allAmplitudes);\n      const maxAmp = Math.max(...allAmplitudes);\n      \n      // Round to nearest 10s with some padding\n      const yMin = Math.floor((minAmp - 5) / 10) * 10;\n      const yMax = Math.ceil((maxAmp + 5) / 10) * 10;\n      \n      // Ensure we have at least a 30dB range for better visibility\n      const range = yMax - yMin;\n      const minRange = 30;\n      if (range < minRange) {\n        const midPoint = (yMin + yMax) / 2;\n        const expandedMin = Math.floor((midPoint - minRange/2) / 10) * 10;\n        const expandedMax = Math.ceil((midPoint + minRange/2) / 10) * 10;\n        return { min: expandedMin, max: expandedMax, step: 10 };\n      }\n      \n      return { min: yMin, max: yMax, step: 10 };\n    };\n    \n    const yAxisTicks = calculateOptimalYTicks();\n    \n    return {\n      responsive: true,\n      maintainAspectRatio: false,\n      devicePixelRatio: 2, // High DPI rendering\n      plugins: {\n        title: {\n          display: true,\n          text: vizState.customTitle || (() => {\n            const leftPanelDatasets = processedDatasets.filter(d => d.panelId === 'dataset-a');\n            const rightPanelDatasets = processedDatasets.filter(d => d.panelId === 'dataset-b');\n            \n            if (leftPanelDatasets.length > 0 && rightPanelDatasets.length > 0) {\n              const leftTitle = leftPanelDatasets[0].filename.replace('.csv', '');\n              const rightTitle = rightPanelDatasets[0].filename.replace('.csv', '');\n              return `${leftTitle} vs. ${rightTitle}`;\n            } else if (leftPanelDatasets.length > 0) {\n              return leftPanelDatasets[0].filename.replace('.csv', '');\n            } else if (rightPanelDatasets.length > 0) {\n              return rightPanelDatasets[0].filename.replace('.csv', '');\n            }\n            return 'EMC Spectrum Analysis';\n          })(),\n          font: {\n            size: 18,\n            weight: 'bold',\n            family: 'Arial, sans-serif'\n          },\n          padding: 20,\n          color: '#2c3e50'\n        },\n        legend: {\n          display: showLegend,\n          position: 'bottom' as const,\n          labels: {\n            usePointStyle: true,\n            pointStyle: 'line',\n            font: {\n              size: 12,\n              family: 'Arial, sans-serif'\n            },\n            padding: 15\n          }\n        },\n        tooltip: {\n          mode: 'nearest',\n          intersect: false,\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          titleColor: '#ffffff',\n          bodyColor: '#ffffff',\n          borderColor: '#ffffff',\n          borderWidth: 1,\n          cornerRadius: 6,\n          displayColors: true,\n          callbacks: {\n            title: (context) => {\n              const freq = context[0].parsed.x;\n              let formattedFreq;\n              if (optimalTicks.unit === 'kHz') {\n                formattedFreq = freq >= 100 ? freq.toFixed(0) : freq.toFixed(1);\n              } else if (optimalTicks.unit === 'MHz') {\n                formattedFreq = freq >= 100 ? freq.toFixed(0) : freq.toFixed(1);\n              } else { // GHz\n                formattedFreq = freq.toFixed(2);\n              }\n              return `Frequency: ${formattedFreq} ${optimalTicks.unit}`;\n            },\n            label: (context) => {\n              return `${context.dataset.label}: ${context.parsed.y.toFixed(2)} dBμV/m`;\n            }\n          }\n        },\n        zoom: {\n          zoom: {\n            wheel: {\n              enabled: true,\n              modifierKey: 'ctrl'\n            },\n            pinch: {\n              enabled: true\n            },\n            mode: 'xy',\n            onZoom: ({ chart }) => {\n              const zoomLevel = chart.getZoomLevel();\n              setVizState(prev => ({ ...prev, zoomLevel }));\n            }\n          },\n          pan: {\n            enabled: true,\n            mode: 'xy'\n          }\n        }\n      },\n      scales: {\n        x: {\n          type: 'linear',\n          title: {\n            display: true,\n            text: `Frequency (${optimalTicks.unit})`,\n            font: {\n              size: 14,\n              weight: 'bold',\n              family: 'Arial, sans-serif'\n            },\n            color: '#2c3e50'\n          },\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            lineWidth: 1\n          },\n          min: optimalTicks.min,\n          max: optimalTicks.max,\n          ticks: {\n            font: {\n              size: 11,\n              family: 'Arial, sans-serif'\n            },\n            color: '#2c3e50',\n            count: 11, // Force exactly 11 ticks = 10 divisions\n            min: optimalTicks.min,\n            max: optimalTicks.max,\n            stepSize: optimalTicks.step,\n            callback: function(value: any) {\n              const numValue = Number(value);\n              // Format numbers based on the unit being used\n              if (optimalTicks.unit === 'kHz') {\n                if (numValue >= 1000) {\n                  return (numValue / 1000).toFixed(1) + 'k';\n                } else if (numValue >= 100) {\n                  return numValue.toFixed(0);\n                } else if (numValue >= 10) {\n                  return numValue.toFixed(1);\n                } else {\n                  return numValue.toFixed(2);\n                }\n              } else if (optimalTicks.unit === 'MHz') {\n                if (numValue >= 1000) {\n                  return (numValue / 1000).toFixed(1) + 'k';\n                } else if (numValue >= 100) {\n                  return numValue.toFixed(0);\n                } else if (numValue >= 1) {\n                  return numValue.toFixed(1);\n                } else {\n                  return numValue.toFixed(2);\n                }\n              } else { // GHz\n                if (numValue >= 1) {\n                  return numValue.toFixed(1);\n                } else {\n                  return numValue.toFixed(2);\n                }\n              }\n            }\n          }\n        },\n        y: {\n          position: 'left',\n          title: {\n            display: true,\n            text: 'Amplitude (dBμV/m)',\n            font: {\n              size: 14,\n              weight: 'bold',\n              family: 'Arial, sans-serif'\n            },\n            color: '#2c3e50'\n          },\n          grid: {\n            color: 'rgba(0, 0, 0, 0.1)',\n            lineWidth: 1\n          },\n          min: yAxisTicks.min,\n          max: yAxisTicks.max,\n          ticks: {\n            font: {\n              size: 11,\n              family: 'Arial, sans-serif'\n            },\n            color: '#2c3e50',\n            stepSize: yAxisTicks.step, // Always 10 dB increments\n            callback: function(value: any) {\n              return Number(value).toFixed(0) + ' dB';\n            }\n          }\n        }\n      },\n      interaction: {\n        intersect: false,\n        mode: 'nearest'\n      },\n      onClick: (event, elements) => {\n        if (elements.length > 0 && onPeakClick) {\n          const element = elements[0];\n          const datasetIndex = element.datasetIndex;\n          const dataIndex = element.index;\n          \n          if (datasetIndex < processedDatasets.length) {\n            const dataset = processedDatasets[datasetIndex];\n            const frequency = dataset.frequencyData[dataIndex];\n            const amplitude = dataset.amplitudeData[dataIndex];\n            \n            // Find if this point is a detected peak\n            const peakData = vizState.detectedPeaks.find(p => p.dataset.id === dataset.id);\n            const peak = peakData?.peaks.find(p => \n              Math.abs(p.frequency - frequency) < 0.001 && \n              Math.abs(p.amplitude - amplitude) < 0.1\n            );\n            \n            if (peak) {\n              onPeakClick(peak, dataset);\n            }\n          }\n        }\n      }\n    };\n  }, [showLegend, processedDatasets, vizState.detectedPeaks, onPeakClick, calculateOptimalTicks, vizState.customTitle]);\n\n  // ========================================================================\n  // EXPORT FUNCTIONALITY\n  // ========================================================================\n\n  const exportChart = useCallback(async (exportType: 'original' | 'zoom' = 'zoom', format: 'png' | 'pdf' = 'png') => {\n    if (!chartRef.current) return;\n\n    setVizState(prev => ({ ...prev, isExporting: true }));\n\n    try {\n      // Handle original view export by temporarily resetting zoom\n      if (exportType === 'original') {\n        chartRef.current.resetZoom();\n        await new Promise(resolve => setTimeout(resolve, 100)); // Wait for reset\n      }\n\n      // Calculate optimal Y-axis ticks with 10-unit increments for export\n      const calculateOptimalYTicksForExport = () => {\n        if (processedDatasets.length === 0) return { min: 0, max: 100, step: 10 };\n        \n        const allAmplitudes = processedDatasets.flatMap(dataset => dataset.amplitudeData);\n        if (allAmplitudes.length === 0) return { min: 0, max: 100, step: 10 };\n        \n        const minAmp = Math.min(...allAmplitudes);\n        const maxAmp = Math.max(...allAmplitudes);\n        \n        // Round to nearest 10s with some padding for better visualization\n        const yMin = Math.floor((minAmp - 5) / 10) * 10;\n        const yMax = Math.ceil((maxAmp + 5) / 10) * 10;\n        \n        // Ensure we have at least a 30dB range for better visibility\n        const range = yMax - yMin;\n        const minRange = 30;\n        if (range < minRange) {\n          const midPoint = (yMin + yMax) / 2;\n          const expandedMin = Math.floor((midPoint - minRange/2) / 10) * 10;\n          const expandedMax = Math.ceil((midPoint + minRange/2) / 10) * 10;\n          return { min: expandedMin, max: expandedMax, step: 10 };\n        }\n        \n        return { min: yMin, max: yMax, step: 10 };\n      };\n\n      const exportYAxisTicks = calculateOptimalYTicksForExport();\n\n      // Create export-specific chart with thinner lines\n      const exportCanvas = document.createElement('canvas');\n      const exportCtx = exportCanvas.getContext('2d');\n      \n      if (!exportCtx) throw new Error('Could not create export canvas');\n\n      // Set high resolution (300 DPI equivalent)\n      const scale = 4; // Increased scale for better quality\n      const originalCanvas = chartRef.current.canvas;\n      exportCanvas.width = originalCanvas.width * scale;\n      exportCanvas.height = originalCanvas.height * scale;\n      \n      // Set white background\n      exportCtx.fillStyle = '#ffffff';\n      exportCtx.fillRect(0, 0, exportCanvas.width, exportCanvas.height);\n      \n      // Create export chart with thinner lines\n      const exportChartCanvas = document.createElement('canvas');\n      const exportChartCtx = exportChartCanvas.getContext('2d');\n      exportChartCanvas.width = originalCanvas.width;\n      exportChartCanvas.height = originalCanvas.height;\n      \n      if (!exportChartCtx) throw new Error('Could not create export chart canvas');\n\n      // Create a new chart instance for export with thinner lines\n      const optimalTicks = calculateOptimalTicks;\n      \n      const exportChartData = {\n        datasets: processedDatasets.map((dataset, index) => ({\n          label: vizState.customLegendLabels[dataset.id] || dataset.label,\n          data: dataset.frequencyData.map((freq, dataIndex) => ({\n            x: freq * optimalTicks.unitMultiplier, // Convert to display units\n            y: dataset.amplitudeData[dataIndex]\n          })),\n          borderColor: dataset.color,\n          backgroundColor: `${dataset.color}15`, // 15% opacity\n          borderWidth: 3, // Thick lines for good visibility in export\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          pointHoverBorderWidth: 0,\n          fill: false,\n          tension: 0.1,\n          spanGaps: false\n        }))\n      };\n\n      // Create temporary chart for export\n      const tempChart = new ChartJS(exportChartCanvas, {\n        type: 'line',\n        data: exportChartData,\n        options: {\n          responsive: false,\n          maintainAspectRatio: false,\n          devicePixelRatio: 1,\n          animation: false,\n          plugins: {\n            title: {\n              display: true,\n              text: (() => {\n                // Use custom title if it exists, otherwise generate automatically\n                if (vizState.customTitle && vizState.customTitle.trim()) {\n                  return vizState.customTitle;\n                }\n                \n                const leftPanelDatasets = processedDatasets.filter(d => d.panelId === 'dataset-a');\n                const rightPanelDatasets = processedDatasets.filter(d => d.panelId === 'dataset-b');\n                \n                if (leftPanelDatasets.length > 0 && rightPanelDatasets.length > 0) {\n                  const leftTitle = leftPanelDatasets[0].filename.replace('.csv', '');\n                  const rightTitle = rightPanelDatasets[0].filename.replace('.csv', '');\n                  return `${leftTitle} vs. ${rightTitle}`;\n                } else if (leftPanelDatasets.length > 0) {\n                  return leftPanelDatasets[0].filename.replace('.csv', '');\n                } else if (rightPanelDatasets.length > 0) {\n                  return rightPanelDatasets[0].filename.replace('.csv', '');\n                }\n                return 'EMC Spectrum Analysis';\n              })(),\n              font: {\n                size: 36,\n                weight: 'bold',\n                family: 'Arial, sans-serif'\n              },\n              padding: 40,\n              color: '#2c3e50'\n            },\n            legend: {\n              display: showLegend,\n              position: 'bottom' as const,\n              labels: {\n                usePointStyle: true,\n                pointStyle: 'line',\n                font: {\n                  size: 24,\n                  family: 'Arial, sans-serif'\n                },\n                padding: 30\n              }\n            },\n            tooltip: {\n              enabled: false\n            }\n          },\n          scales: {\n            x: {\n              type: 'linear',\n              title: {\n                display: true,\n                text: `Frequency (${optimalTicks.unit})`,\n                font: {\n                  size: 28,\n                  weight: 'bold',\n                  family: 'Arial, sans-serif'\n                },\n                color: '#2c3e50'\n              },\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n                lineWidth: 1\n              },\n              min: optimalTicks.min,\n              max: optimalTicks.max,\n              ticks: {\n                font: {\n                  size: 22,\n                  family: 'Arial, sans-serif'\n                },\n                color: '#2c3e50',\n                count: 11,\n                callback: function(value: any) {\n                  const numValue = Number(value);\n                  if (optimalTicks.unit === 'kHz') {\n                    if (numValue >= 1000) return (numValue / 1000).toFixed(1) + 'k';\n                    else if (numValue >= 100) return numValue.toFixed(0);\n                    else if (numValue >= 10) return numValue.toFixed(1);\n                    else return numValue.toFixed(2);\n                  } else if (optimalTicks.unit === 'MHz') {\n                    if (numValue >= 1000) return (numValue / 1000).toFixed(1) + 'k';\n                    else if (numValue >= 100) return numValue.toFixed(0);\n                    else if (numValue >= 1) return numValue.toFixed(1);\n                    else return numValue.toFixed(2);\n                  } else {\n                    if (numValue >= 1) return numValue.toFixed(1);\n                    else return numValue.toFixed(2);\n                  }\n                }\n              }\n            },\n            y: {\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Amplitude (dBμV/m)',\n                font: {\n                  size: 28,\n                  weight: 'bold',\n                  family: 'Arial, sans-serif'\n                },\n                color: '#2c3e50'\n              },\n              grid: {\n                color: 'rgba(0, 0, 0, 0.1)',\n                lineWidth: 1\n              },\n              min: exportYAxisTicks.min,\n              max: exportYAxisTicks.max,\n              ticks: {\n                font: {\n                  size: 22,\n                  family: 'Arial, sans-serif'\n                },\n                color: '#2c3e50',\n                stepSize: exportYAxisTicks.step, // Always 10 dB increments\n                callback: function(value: any) {\n                  return Number(value).toFixed(0) + ' dB';\n                }\n              } as any\n            }\n          },\n          interaction: {\n            intersect: false,\n            mode: 'nearest'\n          }\n        } as any\n      });\n\n      // Copy current zoom state if needed\n      if (exportType === 'zoom' && chartRef.current) {\n        const currentOptions = chartRef.current.options;\n        if (currentOptions?.scales?.x && currentOptions?.scales?.y) {\n          tempChart.options.scales!.x!.min = currentOptions.scales.x.min;\n          tempChart.options.scales!.x!.max = currentOptions.scales.x.max;\n          // For zoom exports, also use the current y-axis range instead of the calculated optimal range\n          tempChart.options.scales!.y!.min = currentOptions.scales.y.min;\n          tempChart.options.scales!.y!.max = currentOptions.scales.y.max;\n          // Recalculate stepSize for zoom export to ensure 10 increments\n          const zoomYRange = (currentOptions.scales.y.max as number) - (currentOptions.scales.y.min as number);\n          (tempChart.options.scales!.y!.ticks as any).stepSize = zoomYRange / 10;\n        }\n      }\n\n      // Render the export chart\n      tempChart.update('none');\n      await new Promise(resolve => setTimeout(resolve, 100)); // Wait for render\n\n      // Enable high-quality rendering\n      exportCtx.imageSmoothingEnabled = true;\n      exportCtx.imageSmoothingQuality = 'high';\n      \n      // Scale and draw the clean chart (no annotations)\n      exportCtx.scale(scale, scale);\n      exportCtx.drawImage(exportChartCanvas, 0, 0);\n\n      // Generate professional filename based on datasets\n      const leftPanelDatasets = processedDatasets.filter(d => d.panelId === 'dataset-a');\n      const rightPanelDatasets = processedDatasets.filter(d => d.panelId === 'dataset-b');\n      \n      let filename = '';\n      if (leftPanelDatasets.length > 0 && rightPanelDatasets.length > 0) {\n        const leftNames = leftPanelDatasets.map(d => d.filename.replace('.csv', '')).join('+');\n        const rightNames = rightPanelDatasets.map(d => d.filename.replace('.csv', '')).join('+');\n        filename = `${leftNames} vs ${rightNames}`;\n      } else if (leftPanelDatasets.length > 0) {\n        filename = leftPanelDatasets.map(d => d.filename.replace('.csv', '')).join('+');\n      } else if (rightPanelDatasets.length > 0) {\n        filename = rightPanelDatasets.map(d => d.filename.replace('.csv', '')).join('+');\n      } else {\n        filename = 'EMC_Spectrum_Analysis';\n      }\n      \n      // Add timestamp\n      const timestamp = new Date().toISOString().split('T')[0];\n      const exportSuffix = exportType === 'original' ? '_Original' : '_Zoomed';\n      filename = `${filename}${exportSuffix}_${timestamp}`;\n\n      // Clean up temporary chart\n      tempChart.destroy();\n\n      // Convert to blob and download\n      exportCanvas.toBlob((blob) => {\n        if (blob) {\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = `${filename}.${format}`;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n          URL.revokeObjectURL(url);\n          \n          console.log(`📸 Chart exported as: ${filename}.${format} (${exportType} view)`);\n        }\n      }, `image/${format}`, 0.95);\n\n    } catch (error) {\n      console.error('Export failed:', error);\n      alert('Export failed. Please try again.');\n    } finally {\n      setVizState(prev => ({ ...prev, isExporting: false }));\n    }\n  }, [processedDatasets, calculateOptimalTicks, showLegend, vizState.customTitle, vizState.customLegendLabels]);\n\n  // ========================================================================\n  // CHART CONTROLS\n  // ========================================================================\n\n  // ========================================================================\n  // EDIT FUNCTIONALITY\n  // ========================================================================\n\n  const handleTitleEdit = (newTitle: string) => {\n    setVizState(prev => ({ \n      ...prev, \n      customTitle: newTitle,\n      isEditingTitle: false\n    }));\n  };\n\n  const handleLegendEdit = (datasetId: string, newLabel: string) => {\n    setVizState(prev => ({ \n      ...prev, \n      customLegendLabels: {\n        ...prev.customLegendLabels,\n        [datasetId]: newLabel\n      }\n    }));\n  };\n\n  // ========================================================================\n  // RENDER HELPERS\n  // ========================================================================\n\n  const renderEditControls = () => {\n    if (csvOverlayState.datasets.length === 0) return null;\n\n    return (\n      <div className=\"edit-controls professional\">\n        <div style={{ display: 'flex', gap: '12px', alignItems: 'center', justifyContent: 'center', flexWrap: 'wrap' }}>\n          {/* Title Edit Button */}\n          <button \n            onClick={() => setVizState(prev => ({ ...prev, isEditingTitle: !prev.isEditingTitle }))}\n            className=\"edit-btn\"\n            style={{\n              backgroundColor: vizState.isEditingTitle ? '#e74c3c' : '#3498db',\n              border: 'none',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '6px',\n              fontWeight: '500',\n              fontSize: '14px',\n              cursor: 'pointer',\n              boxShadow: '0 2px 8px rgba(52, 152, 219, 0.3)',\n              transition: 'all 0.2s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            }}\n          >\n            ✏️ {vizState.isEditingTitle ? 'Cancel' : 'Edit Title'}\n          </button>\n\n          {/* Legend Edit Button */}\n          <button \n            onClick={() => setVizState(prev => ({ ...prev, isEditingLegend: !prev.isEditingLegend }))}\n            className=\"edit-btn\"\n            style={{\n              backgroundColor: vizState.isEditingLegend ? '#e74c3c' : '#2ecc71',\n              border: 'none',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '6px',\n              fontWeight: '500',\n              fontSize: '14px',\n              cursor: 'pointer',\n              boxShadow: '0 2px 8px rgba(46, 204, 113, 0.3)',\n              transition: 'all 0.2s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            }}\n          >\n            🏷️ {vizState.isEditingLegend ? 'Done' : 'Edit Labels'}\n          </button>\n\n          {/* Reset Button */}\n          <button \n            onClick={() => setVizState(prev => ({ \n              ...prev, \n              customTitle: '', \n              customLegendLabels: {},\n              isEditingTitle: false,\n              isEditingLegend: false\n            }))}\n            className=\"reset-btn\"\n            style={{\n              backgroundColor: '#95a5a6',\n              border: 'none',\n              color: 'white',\n              padding: '8px 16px',\n              borderRadius: '6px',\n              fontWeight: '500',\n              fontSize: '14px',\n              cursor: 'pointer',\n              boxShadow: '0 2px 8px rgba(149, 165, 166, 0.3)',\n              transition: 'all 0.2s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            }}\n          >\n            🔄 Reset\n          </button>\n        </div>\n\n        {/* Export Note */}\n        {(vizState.customTitle || Object.keys(vizState.customLegendLabels).length > 0) && (\n          <div style={{ \n            marginTop: '8px', \n            padding: '8px 12px', \n            backgroundColor: 'rgba(52, 152, 219, 0.1)', \n            borderRadius: '6px',\n            textAlign: 'center'\n          }}>\n            <span style={{ fontSize: '12px', color: '#2c3e50', fontWeight: '500' }}>\n              ✨ Custom title and labels will be included in exports\n            </span>\n          </div>\n        )}\n\n        {/* Title Edit Input */}\n        {vizState.isEditingTitle && (\n          <div style={{ marginTop: '12px', textAlign: 'center' }}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter custom chart title...\"\n              defaultValue={vizState.customTitle}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  handleTitleEdit((e.target as HTMLInputElement).value);\n                }\n              }}\n              onBlur={(e) => handleTitleEdit(e.target.value)}\n              autoFocus\n              style={{\n                padding: '12px 16px',\n                border: '2px solid #3498db',\n                borderRadius: '8px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                textAlign: 'center',\n                minWidth: '300px',\n                maxWidth: '600px',\n                width: '100%',\n                fontFamily: 'Arial, sans-serif'\n              }}\n            />\n            <div style={{ marginTop: '6px', fontSize: '12px', color: '#7f8c8d' }}>\n              Press Enter or click away to save\n            </div>\n          </div>\n        )}\n\n        {/* Legend Edit Inputs */}\n        {vizState.isEditingLegend && (\n          <div style={{ marginTop: '12px' }}>\n            <div style={{ \n              display: 'grid', \n              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', \n              gap: '12px',\n              maxWidth: '800px',\n              margin: '0 auto'\n            }}>\n              {processedDatasets.map((dataset) => (\n                <div key={dataset.id} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <div \n                    style={{ \n                      width: '20px', \n                      height: '20px', \n                      backgroundColor: dataset.color,\n                      borderRadius: '50%',\n                      flexShrink: 0,\n                      border: '2px solid white',\n                      boxShadow: '0 1px 3px rgba(0,0,0,0.3)'\n                    }}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder={dataset.label}\n                    defaultValue={vizState.customLegendLabels[dataset.id] || ''}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        handleLegendEdit(dataset.id, (e.target as HTMLInputElement).value);\n                      }\n                    }}\n                    onBlur={(e) => handleLegendEdit(dataset.id, e.target.value)}\n                    style={{\n                      padding: '8px 12px',\n                      border: '2px solid #2ecc71',\n                      borderRadius: '6px',\n                      fontSize: '14px',\n                      flex: 1,\n                      fontFamily: 'Arial, sans-serif'\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n            <div style={{ marginTop: '8px', fontSize: '12px', color: '#7f8c8d', textAlign: 'center' }}>\n              Press Enter or click away to save changes\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderControls = () => {\n    if (!showControls || csvOverlayState.datasets.length === 0) return null;\n\n    return (\n      <div className=\"chart-controls professional compact\">\n        <div className=\"band-filter-control\">\n          <label htmlFor=\"band-filter-select\" className=\"filter-label\">\n            Band Filter:\n          </label>\n          <select\n            id=\"band-filter-select\"\n            value={vizState.selectedBand}\n            onChange={(e) => setVizState(prev => ({ ...prev, selectedBand: e.target.value as BandType | 'all' }))}\n            className=\"band-filter-select\"\n            style={{\n              padding: '6px 12px',\n              marginLeft: '8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd',\n              fontSize: '14px'\n            }}\n          >\n            <option value=\"all\">Show All Data (No Filtering)</option>\n            {Object.entries(BAND_DEFINITIONS).map(([bandType, definition]) => (\n              <option key={bandType} value={bandType}>\n                Filter to {bandType}: {definition.range}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  };\n\n  const renderExportControls = () => {\n    if (csvOverlayState.datasets.length === 0) return null;\n\n    return (\n      <div className=\"export-controls professional\">\n        <div style={{ display: 'flex', gap: '12px', flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n          {/* Default Export Button */}\n          <button \n            onClick={() => exportChart('original', 'png')} \n            className=\"export-btn primary simple\"\n            disabled={vizState.isExporting || processedDatasets.length === 0}\n            style={{\n              backgroundColor: vizState.isExporting ? '#95a5a6' : '#3498db',\n              border: 'none',\n              color: 'white',\n              padding: '12px 24px',\n              borderRadius: '8px',\n              fontWeight: 'bold',\n              fontSize: '16px',\n              cursor: vizState.isExporting ? 'not-allowed' : 'pointer',\n              boxShadow: vizState.isExporting ? 'none' : '0 4px 12px rgba(52, 152, 219, 0.3)',\n              transform: vizState.isExporting ? 'none' : 'translateY(-1px)',\n              transition: 'all 0.2s ease',\n              minWidth: '200px'\n            }}\n          >\n            {vizState.isExporting ? '⏳ Exporting...' : '📈 Export Default View'}\n          </button>\n          \n          {/* Current Zoom Export Button */}\n          <button \n            onClick={() => exportChart('zoom', 'png')} \n            className=\"export-btn primary simple\"\n            disabled={vizState.isExporting || processedDatasets.length === 0}\n            style={{\n              backgroundColor: vizState.isExporting ? '#95a5a6' : '#2ecc71',\n              border: 'none',\n              color: 'white',\n              padding: '12px 24px',\n              borderRadius: '8px',\n              fontWeight: 'bold',\n              fontSize: '16px',\n              cursor: vizState.isExporting ? 'not-allowed' : 'pointer',\n              boxShadow: vizState.isExporting ? 'none' : '0 4px 12px rgba(46, 204, 113, 0.3)',\n              transform: vizState.isExporting ? 'none' : 'translateY(-1px)',\n              transition: 'all 0.2s ease',\n              minWidth: '200px'\n            }}\n          >\n            {vizState.isExporting ? '⏳ Exporting...' : '🔍 Export Zoom View'}\n          </button>\n        </div>\n        \n        {/* Export Information */}\n        <div style={{ \n          marginTop: '8px', \n          fontSize: '12px', \n          color: '#7f8c8d', \n          textAlign: 'center' \n        }}>\n          {(() => {\n            const optimalTicks = calculateOptimalTicks;\n            if (optimalTicks.isBandConstrained) {\n              return `📊 Default export shows Band ${optimalTicks.bandName} with 10-division axis (${optimalTicks.min.toFixed(3)}-${optimalTicks.max.toFixed(3)} ${optimalTicks.unit}) | Zoom export captures current view`;\n            } else {\n              return `📊 Default export shows optimized 10-division frequency axis | Zoom export captures current view`;\n            }\n          })()}\n        </div>\n      </div>\n    );\n  };\n\n  // ========================================================================\n  // MAIN RENDER\n  // ========================================================================\n\n  if (csvOverlayState.datasets.length === 0) {\n    return (\n      <div className=\"csv-visualization-empty professional\">\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">📊</div>\n          <h3>EMC Spectrum Analysis</h3>\n          <p>Professional Data Visualization & Comparison</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"csv-visualization professional\">\n      {renderControls()}\n      \n      <div className=\"chart-container professional\">\n        <Line\n          ref={chartRef}\n          data={chartData}\n          options={chartOptions}\n          width={width}\n          height={height}\n        />\n      </div>\n\n      {renderEditControls()}\n      {renderExportControls()}\n    </div>\n  );\n};\n\nexport default CsvVisualization; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}