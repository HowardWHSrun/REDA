{"ast":null,"code":"import _objectSpread from\"/Users/howardwang/Desktop/Turner Engineering/Software Product Design/reda-main/typescript-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// ========================================================================\n// REDA EMC Testing Tool - CSV Upload Component\n// ========================================================================\n// Turner Engineering Corporation - Professional EMC Testing Support\n// \n// File upload component with drag-and-drop, validation, and preview\n// ========================================================================\nimport React,{useState,useRef,useCallback}from'react';import{useAppContext,useCsvOverlayState}from'../../context/AppContext';import{CsvService}from'../../services/CsvService';import{APP_CONFIG,SUPPORTED_CSV_TYPES}from'../../constants';import'./CsvUpload.css';// ========================================================================\n// UPLOAD COMPONENT INTERFACES\n// ========================================================================\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";// ========================================================================\n// CSV UPLOAD COMPONENT\n// ========================================================================\nexport const CsvUpload=_ref=>{let{maxFiles=8,showAnalysis=true,onFilesUploaded,onError}=_ref;const{addCsvOverlayDataset}=useAppContext();const{csvOverlayState}=useCsvOverlayState();const fileInputRef=useRef(null);const[uploadState,setUploadState]=useState({isDragging:false,isProcessing:false,uploadedFiles:[],errors:[],warnings:[]});// ========================================================================\n// FILE VALIDATION\n// ========================================================================\nconst validateFiles=useCallback(files=>{const fileArray=Array.from(files);const valid=[];const errors=[];// Check file count\nconst totalFiles=csvOverlayState.datasets.length+fileArray.length;if(totalFiles>maxFiles){errors.push(\"Maximum \".concat(maxFiles,\" files allowed. Currently \").concat(csvOverlayState.datasets.length,\" files loaded.\"));return{valid,errors};}for(const file of fileArray){// Check file type\nif(!CsvService.isValidCsvFile(file)){errors.push(\"Invalid file type: \".concat(file.name,\". Please select CSV or TXT files.\"));continue;}// Check file size\nif(file.size>APP_CONFIG.maxFileSize){errors.push(\"File too large: \".concat(file.name,\". Maximum size is \").concat(APP_CONFIG.maxFileSize/(1024*1024),\"MB.\"));continue;}// Check for duplicates\nconst isDuplicate=csvOverlayState.datasets.some(dataset=>dataset.filename===file.name);if(isDuplicate){errors.push(\"File already loaded: \".concat(file.name));continue;}valid.push(file);}return{valid,errors};},[csvOverlayState.datasets,maxFiles]);// ========================================================================\n// FILE PROCESSING\n// ========================================================================\nconst processFiles=useCallback(async files=>{setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{isProcessing:true,errors:[],warnings:[]}));const newDatasets=[];const allErrors=[];const allWarnings=[];const analyses=[];try{for(let i=0;i<files.length;i++){const file=files[i];const colorIndex=(csvOverlayState.datasets.length+i)%APP_CONFIG.chartColors.length;const color=APP_CONFIG.chartColors[colorIndex];try{// Create overlay dataset\nconst result=await CsvService.createOverlayDataset(file,color);if(result.success&&result.data){newDatasets.push(result.data);allWarnings.push(...result.warnings);// Analyze file\nif(showAnalysis){const analysis=CsvService.analyzeFile(file,result.data.data);analyses.push(analysis);}}else{allErrors.push(...result.errors);}}catch(error){allErrors.push(\"Failed to process \".concat(file.name,\": \").concat(error instanceof Error?error.message:'Unknown error'));}}// Add successful datasets to state\nfor(const dataset of newDatasets){addCsvOverlayDataset(dataset);}// Update component state\nsetUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{isProcessing:false,uploadedFiles:[...prev.uploadedFiles,...analyses],errors:allErrors,warnings:allWarnings}));// Notify parent component\nif(onFilesUploaded&&newDatasets.length>0){onFilesUploaded(newDatasets);}if(onError&&allErrors.length>0){onError(allErrors.join('; '));}}catch(error){const errorMessage=\"Processing failed: \".concat(error instanceof Error?error.message:'Unknown error');setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{isProcessing:false,errors:[errorMessage]}));if(onError){onError(errorMessage);}}},[addCsvOverlayDataset,csvOverlayState.datasets.length,showAnalysis,onFilesUploaded,onError]);// ========================================================================\n// EVENT HANDLERS\n// ========================================================================\nconst handleFileSelect=useCallback(async event=>{const files=event.target.files;if(!files||files.length===0)return;const{valid,errors}=validateFiles(files);if(errors.length>0){setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{errors}));return;}await processFiles(valid);// Reset input\nif(fileInputRef.current){fileInputRef.current.value='';}},[validateFiles,processFiles]);const handleDragOver=useCallback(event=>{event.preventDefault();event.stopPropagation();setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{isDragging:true}));},[]);const handleDragLeave=useCallback(event=>{event.preventDefault();event.stopPropagation();setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{isDragging:false}));},[]);const handleDrop=useCallback(async event=>{event.preventDefault();event.stopPropagation();setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{isDragging:false}));const files=event.dataTransfer.files;if(!files||files.length===0)return;const{valid,errors}=validateFiles(files);if(errors.length>0){setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{errors}));return;}await processFiles(valid);},[validateFiles,processFiles]);const handleClick=useCallback(()=>{var _fileInputRef$current;if(uploadState.isProcessing)return;(_fileInputRef$current=fileInputRef.current)===null||_fileInputRef$current===void 0?void 0:_fileInputRef$current.click();},[uploadState.isProcessing]);const clearErrors=useCallback(()=>{setUploadState(prev=>_objectSpread(_objectSpread({},prev),{},{errors:[],warnings:[]}));},[]);// ========================================================================\n// RENDER HELPERS\n// ========================================================================\nconst renderUploadArea=()=>{const hasFiles=csvOverlayState.datasets.length>0;const remainingSlots=maxFiles-csvOverlayState.datasets.length;return/*#__PURE__*/_jsxs(\"div\",{className:\"csv-upload-area \".concat(uploadState.isDragging?'dragging':'',\" \").concat(uploadState.isProcessing?'processing':''),onDragOver:handleDragOver,onDragLeave:handleDragLeave,onDrop:handleDrop,onClick:handleClick,role:\"button\",tabIndex:0,onKeyDown:e=>{if(e.key==='Enter'||e.key===' '){e.preventDefault();handleClick();}},children:[/*#__PURE__*/_jsx(\"input\",{ref:fileInputRef,type:\"file\",accept:SUPPORTED_CSV_TYPES.join(','),multiple:true,onChange:handleFileSelect,style:{display:'none'}}),/*#__PURE__*/_jsx(\"div\",{className:\"upload-content\",children:uploadState.isProcessing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"upload-spinner\",children:\"\\u27F3\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Processing files...\"}),/*#__PURE__*/_jsx(\"small\",{children:\"Analyzing CSV data and detecting frequency bands\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"upload-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsx(\"p\",{children:hasFiles?\"Add more CSV files (\".concat(remainingSlots,\" remaining)\"):'Click to select or drag & drop CSV files'}),/*#__PURE__*/_jsx(\"small\",{children:hasFiles?'Multiple datasets will be displayed with different colors':'Supports CSV files with frequency and amplitude data'}),/*#__PURE__*/_jsx(\"small\",{children:\"Hold Ctrl/Cmd to select multiple files\"})]})})]});};const renderMessages=()=>{if(uploadState.errors.length===0&&uploadState.warnings.length===0){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"upload-messages\",children:[uploadState.errors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-messages\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u274C Errors:\"}),/*#__PURE__*/_jsx(\"ul\",{children:uploadState.errors.map((error,index)=>/*#__PURE__*/_jsx(\"li\",{children:error},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:clearErrors,className:\"clear-errors-btn\",children:\"Clear\"})]}),uploadState.warnings.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"warning-messages\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u26A0\\uFE0F Warnings:\"}),/*#__PURE__*/_jsx(\"ul\",{children:uploadState.warnings.map((warning,index)=>/*#__PURE__*/_jsx(\"li\",{children:warning},index))})]})]});};const renderFileAnalysis=()=>{if(!showAnalysis||uploadState.uploadedFiles.length===0){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:\"file-analysis\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCCA File Analysis:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"analysis-list\",children:uploadState.uploadedFiles.map((analysis,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"filename\",children:analysis.filename}),/*#__PURE__*/_jsx(\"span\",{className:\"status \".concat(analysis.isValid?'valid':'invalid'),children:analysis.isValid?'✅':'❌'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-details\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Band: \",analysis.band||'Unknown']}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Points: \",analysis.dataPoints.toLocaleString()]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Range: \",analysis.frequencyRange.min.toFixed(1),\" - \",analysis.frequencyRange.max.toFixed(1),\" MHz\"]})]}),analysis.errors.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"analysis-errors\",children:analysis.errors.map((error,errorIndex)=>/*#__PURE__*/_jsx(\"small\",{className:\"error\",children:error},errorIndex))})]},index))})]});};// ========================================================================\n// MAIN RENDER\n// ========================================================================\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"csv-upload-component\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upload-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC2 CSV File Upload\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Upload EMC spectrum data files for analysis and comparison\"})]}),renderUploadArea(),renderMessages(),renderFileAnalysis()]});};export default CsvUpload;","map":{"version":3,"names":["React","useState","useRef","useCallback","useAppContext","useCsvOverlayState","CsvService","APP_CONFIG","SUPPORTED_CSV_TYPES","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CsvUpload","_ref","maxFiles","showAnalysis","onFilesUploaded","onError","addCsvOverlayDataset","csvOverlayState","fileInputRef","uploadState","setUploadState","isDragging","isProcessing","uploadedFiles","errors","warnings","validateFiles","files","fileArray","Array","from","valid","totalFiles","datasets","length","push","concat","file","isValidCsvFile","name","size","maxFileSize","isDuplicate","some","dataset","filename","processFiles","prev","_objectSpread","newDatasets","allErrors","allWarnings","analyses","i","colorIndex","chartColors","color","result","createOverlayDataset","success","data","analysis","analyzeFile","error","Error","message","join","errorMessage","handleFileSelect","event","target","current","value","handleDragOver","preventDefault","stopPropagation","handleDragLeave","handleDrop","dataTransfer","handleClick","_fileInputRef$current","click","clearErrors","renderUploadArea","hasFiles","remainingSlots","className","onDragOver","onDragLeave","onDrop","onClick","role","tabIndex","onKeyDown","e","key","children","ref","type","accept","multiple","onChange","style","display","renderMessages","map","index","warning","renderFileAnalysis","isValid","band","dataPoints","toLocaleString","frequencyRange","min","toFixed","max","errorIndex"],"sources":["/Users/howardwang/Desktop/Turner Engineering/Software Product Design/reda-main/typescript-react-app/src/components/CsvUpload/CsvUpload.tsx"],"sourcesContent":["// ========================================================================\n// REDA EMC Testing Tool - CSV Upload Component\n// ========================================================================\n// Turner Engineering Corporation - Professional EMC Testing Support\n// \n// File upload component with drag-and-drop, validation, and preview\n// ========================================================================\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport { useAppContext, useCsvOverlayState } from '../../context/AppContext';\nimport { CsvService } from '../../services/CsvService';\nimport { FileAnalysis, CsvOverlayDataset } from '../../types';\nimport { APP_CONFIG, SUPPORTED_CSV_TYPES } from '../../constants';\nimport './CsvUpload.css';\n\n// ========================================================================\n// UPLOAD COMPONENT INTERFACES\n// ========================================================================\n\ninterface CsvUploadProps {\n  maxFiles?: number;\n  showAnalysis?: boolean;\n  onFilesUploaded?: (datasets: CsvOverlayDataset[]) => void;\n  onError?: (error: string) => void;\n}\n\ninterface FileUploadState {\n  isDragging: boolean;\n  isProcessing: boolean;\n  uploadedFiles: FileAnalysis[];\n  errors: string[];\n  warnings: string[];\n}\n\n// ========================================================================\n// CSV UPLOAD COMPONENT\n// ========================================================================\n\nexport const CsvUpload: React.FC<CsvUploadProps> = ({\n  maxFiles = 8,\n  showAnalysis = true,\n  onFilesUploaded,\n  onError\n}) => {\n  const { addCsvOverlayDataset } = useAppContext();\n  const { csvOverlayState } = useCsvOverlayState();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const [uploadState, setUploadState] = useState<FileUploadState>({\n    isDragging: false,\n    isProcessing: false,\n    uploadedFiles: [],\n    errors: [],\n    warnings: []\n  });\n\n  // ========================================================================\n  // FILE VALIDATION\n  // ========================================================================\n\n  const validateFiles = useCallback((files: FileList | File[]): { valid: File[]; errors: string[] } => {\n    const fileArray = Array.from(files);\n    const valid: File[] = [];\n    const errors: string[] = [];\n\n    // Check file count\n    const totalFiles = csvOverlayState.datasets.length + fileArray.length;\n    if (totalFiles > maxFiles) {\n      errors.push(`Maximum ${maxFiles} files allowed. Currently ${csvOverlayState.datasets.length} files loaded.`);\n      return { valid, errors };\n    }\n\n    for (const file of fileArray) {\n      // Check file type\n      if (!CsvService.isValidCsvFile(file)) {\n        errors.push(`Invalid file type: ${file.name}. Please select CSV or TXT files.`);\n        continue;\n      }\n\n      // Check file size\n      if (file.size > APP_CONFIG.maxFileSize) {\n        errors.push(`File too large: ${file.name}. Maximum size is ${APP_CONFIG.maxFileSize / (1024 * 1024)}MB.`);\n        continue;\n      }\n\n      // Check for duplicates\n      const isDuplicate = csvOverlayState.datasets.some(dataset => \n        dataset.filename === file.name\n      );\n      if (isDuplicate) {\n        errors.push(`File already loaded: ${file.name}`);\n        continue;\n      }\n\n      valid.push(file);\n    }\n\n    return { valid, errors };\n  }, [csvOverlayState.datasets, maxFiles]);\n\n  // ========================================================================\n  // FILE PROCESSING\n  // ========================================================================\n\n  const processFiles = useCallback(async (files: File[]) => {\n    setUploadState(prev => ({ ...prev, isProcessing: true, errors: [], warnings: [] }));\n\n    const newDatasets: CsvOverlayDataset[] = [];\n    const allErrors: string[] = [];\n    const allWarnings: string[] = [];\n    const analyses: FileAnalysis[] = [];\n\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        const colorIndex = (csvOverlayState.datasets.length + i) % APP_CONFIG.chartColors.length;\n        const color = APP_CONFIG.chartColors[colorIndex];\n\n        try {\n          // Create overlay dataset\n          const result = await CsvService.createOverlayDataset(file, color);\n          \n          if (result.success && result.data) {\n            newDatasets.push(result.data);\n            allWarnings.push(...result.warnings);\n\n            // Analyze file\n            if (showAnalysis) {\n              const analysis = CsvService.analyzeFile(file, result.data.data);\n              analyses.push(analysis);\n            }\n          } else {\n            allErrors.push(...result.errors);\n          }\n        } catch (error) {\n          allErrors.push(`Failed to process ${file.name}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        }\n      }\n\n      // Add successful datasets to state\n      for (const dataset of newDatasets) {\n        addCsvOverlayDataset(dataset);\n      }\n\n      // Update component state\n      setUploadState(prev => ({\n        ...prev,\n        isProcessing: false,\n        uploadedFiles: [...prev.uploadedFiles, ...analyses],\n        errors: allErrors,\n        warnings: allWarnings\n      }));\n\n      // Notify parent component\n      if (onFilesUploaded && newDatasets.length > 0) {\n        onFilesUploaded(newDatasets);\n      }\n\n      if (onError && allErrors.length > 0) {\n        onError(allErrors.join('; '));\n      }\n\n    } catch (error) {\n      const errorMessage = `Processing failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      setUploadState(prev => ({\n        ...prev,\n        isProcessing: false,\n        errors: [errorMessage]\n      }));\n\n      if (onError) {\n        onError(errorMessage);\n      }\n    }\n  }, [addCsvOverlayDataset, csvOverlayState.datasets.length, showAnalysis, onFilesUploaded, onError]);\n\n  // ========================================================================\n  // EVENT HANDLERS\n  // ========================================================================\n\n  const handleFileSelect = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    const { valid, errors } = validateFiles(files);\n    \n    if (errors.length > 0) {\n      setUploadState(prev => ({ ...prev, errors }));\n      return;\n    }\n\n    await processFiles(valid);\n    \n    // Reset input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, [validateFiles, processFiles]);\n\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setUploadState(prev => ({ ...prev, isDragging: true }));\n  }, []);\n\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setUploadState(prev => ({ ...prev, isDragging: false }));\n  }, []);\n\n  const handleDrop = useCallback(async (event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setUploadState(prev => ({ ...prev, isDragging: false }));\n\n    const files = event.dataTransfer.files;\n    if (!files || files.length === 0) return;\n\n    const { valid, errors } = validateFiles(files);\n    \n    if (errors.length > 0) {\n      setUploadState(prev => ({ ...prev, errors }));\n      return;\n    }\n\n    await processFiles(valid);\n  }, [validateFiles, processFiles]);\n\n  const handleClick = useCallback(() => {\n    if (uploadState.isProcessing) return;\n    fileInputRef.current?.click();\n  }, [uploadState.isProcessing]);\n\n  const clearErrors = useCallback(() => {\n    setUploadState(prev => ({ ...prev, errors: [], warnings: [] }));\n  }, []);\n\n  // ========================================================================\n  // RENDER HELPERS\n  // ========================================================================\n\n  const renderUploadArea = () => {\n    const hasFiles = csvOverlayState.datasets.length > 0;\n    const remainingSlots = maxFiles - csvOverlayState.datasets.length;\n\n    return (\n      <div\n        className={`csv-upload-area ${uploadState.isDragging ? 'dragging' : ''} ${uploadState.isProcessing ? 'processing' : ''}`}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n        onClick={handleClick}\n        role=\"button\"\n        tabIndex={0}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            handleClick();\n          }\n        }}\n      >\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept={SUPPORTED_CSV_TYPES.join(',')}\n          multiple\n          onChange={handleFileSelect}\n          style={{ display: 'none' }}\n        />\n\n        <div className=\"upload-content\">\n          {uploadState.isProcessing ? (\n            <>\n              <div className=\"upload-spinner\">⟳</div>\n              <p>Processing files...</p>\n              <small>Analyzing CSV data and detecting frequency bands</small>\n            </>\n          ) : (\n            <>\n              <div className=\"upload-icon\">📁</div>\n              <p>\n                {hasFiles \n                  ? `Add more CSV files (${remainingSlots} remaining)`\n                  : 'Click to select or drag & drop CSV files'\n                }\n              </p>\n              <small>\n                {hasFiles\n                  ? 'Multiple datasets will be displayed with different colors'\n                  : 'Supports CSV files with frequency and amplitude data'\n                }\n              </small>\n              <small>Hold Ctrl/Cmd to select multiple files</small>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderMessages = () => {\n    if (uploadState.errors.length === 0 && uploadState.warnings.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"upload-messages\">\n        {uploadState.errors.length > 0 && (\n          <div className=\"error-messages\">\n            <h4>❌ Errors:</h4>\n            <ul>\n              {uploadState.errors.map((error, index) => (\n                <li key={index}>{error}</li>\n              ))}\n            </ul>\n            <button onClick={clearErrors} className=\"clear-errors-btn\">\n              Clear\n            </button>\n          </div>\n        )}\n        \n        {uploadState.warnings.length > 0 && (\n          <div className=\"warning-messages\">\n            <h4>⚠️ Warnings:</h4>\n            <ul>\n              {uploadState.warnings.map((warning, index) => (\n                <li key={index}>{warning}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderFileAnalysis = () => {\n    if (!showAnalysis || uploadState.uploadedFiles.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"file-analysis\">\n        <h4>📊 File Analysis:</h4>\n        <div className=\"analysis-list\">\n          {uploadState.uploadedFiles.map((analysis, index) => (\n            <div key={index} className=\"analysis-item\">\n              <div className=\"analysis-header\">\n                <span className=\"filename\">{analysis.filename}</span>\n                <span className={`status ${analysis.isValid ? 'valid' : 'invalid'}`}>\n                  {analysis.isValid ? '✅' : '❌'}\n                </span>\n              </div>\n              <div className=\"analysis-details\">\n                <span>Band: {analysis.band || 'Unknown'}</span>\n                <span>Points: {analysis.dataPoints.toLocaleString()}</span>\n                <span>Range: {analysis.frequencyRange.min.toFixed(1)} - {analysis.frequencyRange.max.toFixed(1)} MHz</span>\n              </div>\n              {analysis.errors.length > 0 && (\n                <div className=\"analysis-errors\">\n                  {analysis.errors.map((error, errorIndex) => (\n                    <small key={errorIndex} className=\"error\">{error}</small>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // ========================================================================\n  // MAIN RENDER\n  // ========================================================================\n\n  return (\n    <div className=\"csv-upload-component\">\n      <div className=\"upload-header\">\n        <h3>📂 CSV File Upload</h3>\n        <p>Upload EMC spectrum data files for analysis and comparison</p>\n      </div>\n      \n      {renderUploadArea()}\n      {renderMessages()}\n      {renderFileAnalysis()}\n    </div>\n  );\n};\n\nexport default CsvUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}